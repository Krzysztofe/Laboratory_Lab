{"version":3,"file":"static/js/874.e15aa2fe.chunk.js","mappings":"qJAiBO,IAAMA,EAAoB,SAC/BC,EACAC,GACI,IAADC,EAAAC,EAAAC,EACGC,EAAa,CACjB,CACE,CACEC,UAAWN,EAAiBO,KAAKC,OAAOC,OAAS,EACjDC,aAAc,mBACdC,IAAK,QAEP,CACEL,UAAWN,EAAiBO,KAAKC,OAAOC,OAAS,GACjDC,aAAc,oBACdC,IAAK,QAGP,CACEL,UACEM,OAAOZ,EAAiBa,oBACvBb,EAAiBa,iBAAmB,IACpCb,EAAiBa,iBAAmB,EACvCH,aAAc,aACdC,IAAK,oBAEP,CACEL,WAAY,CAAC,UAAW,UAAW,YAAYQ,SAC7Cd,EAAiBe,UAAUP,OAAOQ,eAEpCN,aAAc,mBACdC,IAAK,aAGP,CACEL,UAAWN,EAAiBiB,SAAST,OAAOC,OAAS,EACrDC,aAAc,eACdC,IAAK,YAEP,CACEL,UAAWN,EAAiBiB,SAAST,OAAOC,OAAS,GACrDC,aAAc,oBACdC,IAAK,aAIT,CACE,CACEL,YAC8B,QAA5BJ,EAACF,EAAiBkB,kBAAU,IAAAhB,GAA3BA,EACGM,OACDQ,cACAF,SAAS,iBACgB,QAA5BX,EAACH,EAAiBkB,kBAAU,IAAAf,GAA3BA,EACGK,OACDQ,cACAF,SAAS,kBACgB,QAA5BV,EAACJ,EAAiBkB,kBAAU,IAAAd,GAA3BA,EACGI,OACDQ,cACAF,SAAS,YACdJ,aAAc,oBACdC,IAAK,cAGP,CACEL,WAAY,CAAC,YAAa,aAAc,aAAaQ,SACnDd,EAAiBmB,wBAAwBX,OAAOQ,eAElDN,aAAc,kBACdC,IAAK,2BAEP,CACEL,WAAY,CAAC,QAAS,SAAU,WAAWQ,SACzCd,EAAiBoB,QAAQZ,OAAOQ,eAElCN,aAAc,qBACdC,IAAK,YAIT,CACE,CACEL,WAAYN,EAAiBqB,UAC7BX,aAAc,WACdC,IAAK,aAEP,CACEL,WAAYN,EAAiBsB,WAC7BZ,aAAc,WACdC,IAAK,cAEP,CACEL,UACE,IAAIiB,KAAKvB,EAAiBqB,WAC1B,IAAIE,KAAKvB,EAAiBsB,YAC5BZ,aAAc,mBACdC,IAAK,cAEP,CACEL,WAAYN,EAAiBwB,UAC7Bd,aAAc,WACdC,IAAK,aAEP,CACEL,WAAYN,EAAiByB,WAC7Bf,aAAc,WACdC,IAAK,gBAoBX,MAAO,CAAEe,eAfc,WACrB,IAAIC,EAAiC,CAAC,EAWtC,YARUC,IAAR3B,EAAoBI,EAAWwB,OAASxB,EAAWJ,IAExC6B,SAAQ,SAAAC,GAAuC,IAApCzB,EAASyB,EAATzB,UAAWI,EAAYqB,EAAZrB,aAAcC,EAAGoB,EAAHpB,IAC3CL,IACFqB,EAAQhB,GAAOD,EAEnB,IAEOiB,CACT,EAGF,C,8ICjHA,EA7ByB,SAACK,GACxB,IAAAC,GAA4CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAgBxC,MAAO,CACLE,eAAAA,EACAC,kBAAAA,EACAC,KAAMP,EAAMK,GACZL,MAAAA,EACAQ,YAAgC,IAAnBH,EACbI,WAAYJ,IAAmBL,EAAMvB,OAAS,EAC9CiC,KArBW,WACXJ,GAAkB,SAAAK,GAChB,OAAIA,GAAQX,EAAMvB,OAAS,EAAU,EAC9BkC,EAAO,CAChB,GACF,EAiBEC,KAfW,WACXN,GAAkB,SAAAK,GAChB,OAAIA,GAAQ,EAAU,EACfA,EAAO,CAChB,GACF,EAYF,E,4BCLA,EAnB2B,SAACE,GAOxB,OACEC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,uCAAsCC,SAAA,EACtDF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,yBAAwBC,SAAA,CAAC,QAC9BH,EAAMR,eAAiB,EAAE,IAAEQ,EAAMb,MAAMvB,WAE/CwC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,+BAA8BC,SAXf,CAC7B,sBACA,yBACA,mBACA,gBAQ0BH,EAAMR,oBAIxC,E,mBCWA,EAnBmB,SAACQ,GAClB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAMK,eAAeF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACL5C,KAAMsC,EAAMtC,KACZ6C,MAAOP,EAAMO,MACbC,QAASR,EAAMQ,QACfC,SAAUT,EAAMU,aAChBR,UAAWF,EAAMW,WACjBC,GAAIZ,EAAMO,SAEZH,EAAAA,EAAAA,KAAA,SAAOS,QAASb,EAAMO,MAAOL,UAAWF,EAAMc,WAAWX,SACtDH,EAAMe,MAAOf,EAAMe,MAAOf,EAAMO,UAIzC,ECwBA,EAxCoB,SAACP,GACnB,IAAAZ,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC4B,EAAI1B,EAAA,GAAE2B,EAAO3B,EAAA,GAEd4B,EAAa,WACjBD,GAAQ,SAAAE,GAAK,OAAKA,CAAK,GACzB,EAEA,OACElB,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAMK,eAAeF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAWF,EAAMc,WAAWX,SAAEH,EAAMe,SAE3Cd,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAMoB,sBAAsBjB,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKoB,QAASH,EAAYhB,UAAWF,EAAMsB,cAAcnB,SAAA,CACtDH,EAAMO,OACPH,EAAAA,EAAAA,KAAA,OAAKF,UAAWc,EAAO,oBAAsB,qBAG9CA,IACCZ,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAApB,SACGH,EAAMwB,aAAaC,KAAI,SAAAlB,GACtB,OACEH,EAAAA,EAAAA,KAAA,OAEEF,UAAWF,EAAM0B,YACjBL,QAAS,WACPrB,EAAMU,aAAaV,EAAM2B,UAAWpB,GACpCW,GACF,EAAEf,SAEDI,GAPIA,EAUX,WAMZ,E,oBCrDaqB,EAAgB,CAAC,UAAW,UAAW,YCuHpD,EAxGe,SAAC5B,GACd,IAAM6B,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,KAAY,SAACb,GAAgB,OAAKA,EAAMc,YAAY,IAAjEF,SAEFG,EAAoB,SAACC,GACzB,IAAAC,EAAwBD,EAAEE,OAAlB3E,EAAI0E,EAAJ1E,KAAM6C,EAAK6B,EAAL7B,MACdsB,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAMA,EAAM6C,MAAOA,IAC7C,EAMA,OACEN,EAAAA,EAAAA,MAACqC,EAAAA,EAAAA,QAAc,CACbC,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAO,IAAMzC,SAAA,EAE3BC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRvC,KAAM,OACN5C,KAAM,OACN6C,MAAOwB,EAASrE,KAChBgD,aAAcwB,EACdnB,MAAO,gBACP+B,YAAa,QACbzC,eAAgB,+BAChBS,WAAY,2BACZiC,WAAY,yBAEd3C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAOtF,MACZ0C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAEH,EAAMgD,OAAOtF,OACtD,QAGN0C,EAAAA,EAAAA,KAAC6C,EAAW,CACVlC,MAAO,iCACPY,UAAW,mBACXH,aAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACxCjB,MAAOwB,EAAS/D,iBAChB0C,aAhCqB,SAAChD,EAAc6C,GACxCsB,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAMA,EAAM6C,MAAOA,IAC7C,EA+BMF,eAAe,4BACfS,WAAW,wBACXQ,cAAc,sBACdF,sBAAsB,mCACtBM,YAAY,4BAGdtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAOhF,kBACZoC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCH,EAAMgD,OAAOhF,mBAEd,QAGNoC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,aACzCyB,EAAcH,KAAI,SAAAyB,GACjB,OACE9C,EAAAA,EAAAA,KAAC+C,EAAU,CAET5C,MAAO2C,EACPxF,KAAM,YACNgD,aAAcwB,EACd1B,QAASuB,EAAS7D,YAAcgF,EAChC7C,eAAgB,2BAChBM,WAAY,uBACZG,WAAY,wBAPPoC,EAUX,KAEA9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAO9E,WACZkC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCH,EAAMgD,OAAO9E,YAEd,QAGNkC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRvC,KAAM,OACN5C,KAAM,WACN6C,MAAOwB,EAAS3D,SAChBsC,aAAcwB,EACdnB,MAAO,WACP+B,YAAa,WACbzC,eAAgB,+BAChBS,WAAY,2BACZiC,WAAY,yBAGd3C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAO5E,UACZ6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CACtCH,EAAMgD,OAAO5E,SAAU,OAExB,SAIZ,EC3FA,EAjBsB,SAAC4B,GACrB,OACEI,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAApB,UACEF,EAAAA,EAAAA,MAAA,SAAOC,UAAWF,EAAMc,WAAWX,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,MAAOP,EAAMO,MACbC,QAASR,EAAMQ,QACfC,SAAUT,EAAMU,aAChBR,UAAWF,EAAM+C,cAEnB3C,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAMoD,WAAWjD,SAAEH,EAAMO,YAIjD,E,UCmHA,EA3He,SAACP,GACd,IAAM6B,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,KAAY,SAACb,GAAgB,OAAKA,EAAMc,YAAY,IAAjEF,SAER3C,GAA4CC,EAAAA,EAAAA,UAC1C0C,EAAS1D,YACViB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMiE,EAAc/D,EAAA,GAAEgE,EAAiBhE,EAAA,IAIxCiE,EAAAA,EAAAA,YAAU,WACR1B,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAM,aAAc6C,MAAO8C,IACrD,GAAG,CAACA,IAEJ,IAAMG,EAAuB,SAACrB,GAC5B,IACIsB,EADJrB,EAA2BD,EAAEE,OAArB9B,EAAK6B,EAAL7B,MAKDkD,EALerB,EAAP5B,QAIb6C,EACkB,GAAAK,OAAML,EAAc,KAAAK,OAAInD,GACrBA,EAEL8C,EACbM,MAAM,KACNC,QAAO,SAAAC,GAAG,OAAIA,IAAQtD,CAAK,IAC3BuD,KAAK,KAGVR,EAAkBG,EACpB,EAOMM,EAAoB,SAAC5B,GACzB,IAAA6B,EAAwB7B,EAAEE,OAAlB3E,EAAIsG,EAAJtG,KAAM6C,EAAKyD,EAALzD,MACdsB,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAMA,EAAM6C,MAAOA,IAC7C,EAEA,OACEN,EAAAA,EAAAA,MAACqC,EAAAA,EAAAA,IAAU,CACTC,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAO,IAAMzC,SAAA,EAI3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,6BAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,CAC3C,CAAC,YAAa,aAAc,WAAWsB,KAAI,SAAAlB,GAAK,OAC/CH,EAAAA,EAAAA,KAAC6D,EAAa,CAEZ1D,MAAOA,EACPC,QAASuB,EAAS1D,WAAWJ,SAASsC,GACtCG,aAAc8C,EACd1C,WAAY,0BACZiC,WAAY,0BACZK,WAAY,2BANPc,OAAOC,aAOZ,KAEJ/D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gCAGjBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAO3E,YACZ+B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCH,EAAMgD,OAAO3E,aAEd,QAKN+B,EAAAA,EAAAA,KAAC6C,EAAW,CACVlC,MAAO,kBACPY,UAAW,0BACXH,aAAc,CAAC,YAAa,aAAc,YAAa,mBACvDjB,MAAOwB,EAASzD,wBAChBoC,aAhDqB,SAAChD,EAAc6C,GACxCsB,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAMA,EAAM6C,MAAOA,IAC7C,EA+CMF,eAAgB,4BAChBS,WAAW,wBACXQ,cAAc,sBACdF,sBAAsB,mCACtBM,YAAY,4BAGdtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAO1E,yBACZ8B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCH,EAAMgD,OAAO1E,0BAEd,QAKN8B,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,oBACzC,CAAC,QAAS,SAAU,WAAWsB,KAAI,SAAAlD,GAClC,OACE6B,EAAAA,EAAAA,KAAC+C,EAAU,CAET5C,MAAOhC,EACPb,KAAM,UACNgD,aAAcqD,EACdvD,QAASuB,EAASxD,UAAYA,EAC9B8B,eAAgB,2BAChBM,WAAY,uBACZG,WAAY,uBACZC,OAAOqD,EAAAA,EAAAA,GAAW7F,IARbA,EAWX,KAEA6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAOzE,SACZ6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAEH,EAAMgD,OAAOzE,UACtD,SAIZ,ECvIa8F,EAAS,CACpB,CACE3G,KAAM,YACN4C,KAAM,OACNS,MAAO,gBACPR,MAAO,SAACwB,GAAuB,OAAKA,EAASvD,SAAS,EACtD8F,SAAU,aAEZ,CACE5G,KAAM,aACN4C,KAAM,OACNS,MAAO,uBACPR,MAAO,SAACwB,GAAuB,OAAKA,EAAStD,UAAU,EACvD6F,SAAU,cAEZ,CACE5G,KAAM,YACN4C,KAAM,OACNS,MAAO,2BACPR,MAAO,SAACwB,GAAuB,OAAKA,EAASpD,SAAS,EACtD2F,SAAU,aAEZ,CACE5G,KAAM,aACN4C,KAAM,OACNS,MAAO,2BACPR,MAAO,SAACwB,GAAuB,OAAKA,EAASnD,UAAU,EACvD0F,SAAU,eC2Bd,EA1Ce,SAACtE,GACd,IAAM6B,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,KAAY,SAACb,GAAgB,OAAKA,EAAMc,YAAY,IAAjEF,SAGFG,EAAoB,SAACC,GACzB,IAAAC,EAAwBD,EAAEE,OAAlB3E,EAAI0E,EAAJ1E,KAAM6C,EAAK6B,EAAL7B,MACbsB,GAASnB,EAAAA,EAAAA,IAAa,CAAEhD,KAAMA,EAAM6C,MAAOA,IAC9C,EAEA,OACEH,EAAAA,EAAAA,KAACkC,EAAAA,EAAAA,QAAc,CACbC,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAO,IAAMzC,SAE1BkE,EAAO5C,KAAI,SAAAvC,GAAA,IAAGxB,EAAIwB,EAAJxB,KAAM4C,EAAIpB,EAAJoB,KAAMS,EAAK7B,EAAL6B,MAAOR,EAAKrB,EAALqB,MAAO+D,EAAQpF,EAARoF,SAAQ,OAC/CrE,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRvC,KAAMA,EACN5C,KAAMA,EACN6C,MAAOA,EAAMwB,GACbrB,aAAcwB,EACdnB,MAAOA,EACPV,eAAgB,+BAChBS,WAAY,2BACZiC,WAAY,yBAGd3C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC7BH,EAAMgD,OAAOsB,IACZlE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SACtCH,EAAMgD,OAAOsB,KAEd,SAjBE5G,EAmBJ,KAId,ECtDa6G,EAAgB,CAC3B,QACA,WACA,YACA,uBACA,kBACA,iBACA,aAGWC,EAAe,CAC1B,mBACA,mBACA,mBACA,oBCyCF,EA/Ce,WACb,IAAQzC,GAAaC,EAAAA,EAAAA,KAAY,SAACb,GAAgB,OAAKA,EAAMc,YAAY,IAAjEF,SAEF0C,EAAoBC,OAAOC,OAAO5C,GAExC,OACE3B,EAAAA,EAAAA,KAACkC,EAAAA,EAAAA,QAAc,CACbpC,UAAU,QACVqC,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAO,IAAMzC,UAE3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,eAEhCsE,EAAkBG,MAAM,EAAG,GAAGnD,KAAI,SAAClB,EAAOnD,GACzC,OACE6C,EAAAA,EAAAA,MAAA,MAA6BC,UAAU,sBAAqBC,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACrCoE,EAAcnH,GAAK,YAEtBgD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAC1B,IAAR/C,GACGgH,EAAAA,EAAAA,GAAW7D,GACH,IAARnD,EACCmD,EAAMoD,MAAM,KAAKG,KAAK,MACvBvD,MATCgE,EAAcnH,GAa3B,KACAgD,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,WAChCsE,EAAkBG,MAAM,EAAG,IAAInD,KAAI,SAAClB,EAAOnD,GAC1C,OACE6C,EAAAA,EAAAA,MAAA,MAA6BC,UAAU,sBAAqBC,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACrCqE,EAAapH,GAAK,YAErBgD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAAEI,MAJhCgE,EAAcnH,GAO3B,QAIR,ECsEA,EA5G0B,WACxB,IAAMyH,GAAWC,EAAAA,EAAAA,OACjBvB,EAAAA,EAAAA,YAAU,WACRwB,EAAAA,EAAAA,oBAAwB,SAAAC,IACrBA,GAAQH,EAAS,IACpB,GACF,GAAG,IAEH,IAAMhD,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,KAAY,SAACb,GAAgB,OAAKA,EAAMc,YAAY,IAAjEF,SACR3C,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC4D,EAAM1D,EAAA,GAAE2F,EAAS3F,EAAA,GACxB4F,GAA+BC,EAAAA,EAAAA,MAAwBC,GAAA7F,EAAAA,EAAAA,GAAA2F,EAAA,GAAhDG,EAAWD,EAAA,GAAEE,EAAOF,EAAA,GAE3BG,EASIC,EAAiB,EACnBpF,EAAAA,EAAAA,KAACqF,EAAM,CAACzC,OAAQA,KAChB5C,EAAAA,EAAAA,KAACsF,EAAM,CAAC1C,OAAQA,KAChB5C,EAAAA,EAAAA,KAACuF,EAAM,CAAC3C,OAAQA,KAChB5C,EAAAA,EAAAA,KAACwF,EAAM,MAZPzG,EAAKoG,EAALpG,MACAK,EAAc+F,EAAd/F,eACAC,EAAiB8F,EAAjB9F,kBACAC,EAAI6F,EAAJ7F,KACAC,EAAW4F,EAAX5F,YACAC,EAAU2F,EAAV3F,WACAG,EAAIwF,EAAJxF,KACAF,EAAI0F,EAAJ1F,KAQIzC,EAAyB,IAAnBoC,OAAuBT,EAAYS,EACvCX,GAAmB3B,EAAAA,EAAAA,GAAkB6E,EAAU3E,GAA/CyB,eAEFgH,EAAY,eAAA3G,GAAA4G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO9D,GAAY,OAAA4D,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAArG,KAAAqG,EAAAtG,MAAA,OAEV,GAD5BsC,EAAEiE,iBACFnB,EAAUpG,MACN6F,OAAO2B,KAAKxH,KAAkBjB,OAAO,CAADuI,EAAAtG,KAAA,eAAAsG,EAAAG,OAAA,qBACxC1G,EAAU,CAAAuG,EAAAtG,KAAA,eAAAsG,EAAAtG,KAAA,EACAwF,GAAWkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdxE,GAAQ,IACX1D,WAAY0D,EAAS1D,WAAWsF,MAAM,KAAKG,KAAK,SAChD,OAAAqC,EAAAtG,KAAA,gBACFA,IAAO,KAAD,oBAAAsG,EAAAK,OAAA,GAAAP,EAAA,KACX,gBAViBQ,GAAA,OAAAvH,EAAAwH,MAAA,KAAAC,UAAA,MAYlBpD,EAAAA,EAAAA,YAAU,WACR,IAAIqD,EAQJ,OAPItB,EAAQuB,YACVD,EAAYE,YAAW,WACrBrH,EAAkB,GAClBoC,GAASkF,EAAAA,EAAAA,OACTzB,EAAQuB,WAAY,CACtB,GAAG,MAEE,kBAAMG,aAAaJ,EAAW,CACvC,GAAG,CAACtB,EAAQuB,UAAWpH,EAAmBoC,IAE1C,IAAIoF,GACFhH,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAApB,SAAA,CACGT,GACDO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BR,IACAS,EAAAA,EAAAA,KAAA,UACEE,KAAK,SACLe,QAAStB,EACTG,UAAU,wBAAuBC,SAClC,kBAIHC,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASJ,UAAU,wBAAuBC,SACpDP,EAAa,cAAW,gBA0BjC,OApBI0F,EAAQ4B,OACN,UAAW5B,EAAQ4B,QACrBD,GACE7G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gCAA+BC,SAC3CmF,EAAQ4B,MAAMA,SAInB5B,EAAQ6B,YACVF,GAAc7G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAG3BoF,EAAQuB,YACVI,GACEhH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,CAAC,gCACtBC,EAAAA,EAAAA,KAAA,SAAM,gBAMjCH,EAAAA,EAAAA,MAAA,QAAMC,UAAU,eAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAACgH,EAAkB,CAAC5H,eAAgBA,EAAgBL,MAAOA,KAC3DiB,EAAAA,EAAAA,KAAA,QAAMiH,SAAUxB,EAAc3F,UAAS,6BAA+BC,UACpEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAAE8G,UAKlD,C","sources":["hooks/useValidationForm.tsx","hooks/useMultistepForm.tsx","pages/reactionForm/reactionFormHeader/ReactionFormHeader.tsx","components/inputs/radioInput/RadioInput.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/dataStep_3.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/_indexFormReaction/IndexFormReaction.tsx"],"sourcesContent":["import { ModelReaction } from \"../services/apiSlice\";\r\n\r\nexport interface ModelValidationErrors {\r\n  [key: string]: any;\r\n  name?: string;\r\n  technics?: string;\r\n  alcaloids?: string;\r\n  selectMilimolles?: string;\r\n  atmosphere?: string;\r\n  solvent?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nexport const useValidationForm = (\r\n  validateReaction: ModelReaction,\r\n  idx?: number\r\n) => {\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: validateReaction.name.trim().length < 6,\r\n        errorMessage: \"Min. 6 znaków\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        condition: validateReaction.name.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          isNaN(+validateReaction.selectMilimolles) ||\r\n          +validateReaction.selectMilimolles < 1 ||\r\n          +validateReaction.selectMilimolles > 6,\r\n        errorMessage: \"Cyfra: 1-6\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition: ![\"GRAMINA\", \"KOFEINA\", \"NIKOTYNA\"].includes(\r\n          validateReaction.alcaloids.trim().toUpperCase()\r\n        ),\r\n        errorMessage: \"Alkaloid z listy\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: validateReaction.technics.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n      {\r\n        condition: validateReaction.technics.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition:\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toUpperCase()\r\n            .includes(\"PROTYCZNA\") &&\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toUpperCase()\r\n            .includes(\"APROTYCZNA\") &&\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toUpperCase()\r\n            .includes(\"POLARNA\"),\r\n        errorMessage: \"Atmosfera z listy\",\r\n        key: \"atmosphere\",\r\n      },\r\n\r\n      {\r\n        condition: ![\"MIESZANIE\", \"OGRZEWANIE\", \"MIKROFALA\"].includes(\r\n          validateReaction.selectReactionCondition.trim().toUpperCase()\r\n        ),\r\n        errorMessage: \"Warunki z listy\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n      {\r\n        condition: ![\"CHCL3\", \"C2H5OH\", \"C6H5CH3\"].includes(\r\n          validateReaction.solvent.trim().toUpperCase()\r\n        ),\r\n        errorMessage: \"Roztwór z listy\",\r\n        key: \"solvent\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !validateReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !validateReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition:\r\n          new Date(validateReaction.startDate) >\r\n          new Date(validateReaction.finishDate),\r\n        errorMessage: \"Data po otwarciu\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !validateReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !validateReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationForm = () => {\r\n    let _errors: ModelValidationErrors = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        _errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return _errors;\r\n  };\r\n\r\n  return { validationForm };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  steps: JSX.Element[];\r\n  currentStepIdx: number\r\n}\r\n\r\nconst ReactionFormHeader = (props:Props) => {\r\n      const reactionFormHeaderData = [\r\n        \"Podstawowe reagenty\",\r\n        \"Techniki laboratoryjne\",\r\n        \"Przebieg reakcji\",\r\n        \"Podsumowanie\",\r\n      ];\r\n    return (\r\n      <header className=\"wrapper wrapper--formReactionHeader \">\r\n        <p className=\"formReaction__stepIdx \">\r\n          Krok {props.currentStepIdx + 1}/{props.steps.length}\r\n        </p>\r\n        <h2 className=\"formReaction__topDescription\">\r\n          {reactionFormHeaderData[props.currentStepIdx]}\r\n        </h2>\r\n      </header>\r\n    );\r\n};\r\n\r\nexport default ReactionFormHeader;","import { ReactNode } from \"react\";\r\n\r\n\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n  label?: ReactNode;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n        {props.label? props.label :props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: string[];\r\n  label: string;\r\n  inputName: string;\r\n  value: string;\r\n  handleChange: (name: string, value: string) => void\r\n  containerClass?: string;\r\n  labelClass?: string;\r\n  optionsContainerClass?: string;\r\n  inputTopClass?: string;\r\n  optionClass?: string;\r\n}\r\n\r\nconst SelectInput = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <label className={props.labelClass}>{props.label}</label>\r\n\r\n      <div className={props.optionsContainerClass}>\r\n        <div onClick={handleOpen} className={props.inputTopClass}>\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n                  className={props.optionClass}\r\n                  onClick={() => {\r\n                    props.handleChange(props.inputName, value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { motion } from \"framer-motion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\n\r\nexport interface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const handleInputChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    dispatch(handleChange({ name: name, value: value }));\r\n  };\r\n\r\n  const handleSelectChange = (name: string, value: string) => {\r\n    dispatch(handleChange({ name: name, value: value }));\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={reaction.name}\r\n        handleChange={handleInputChange}\r\n        label={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        {props.errors.name ? (\r\n          <div className=\"reaction__errorAnimation\">{props.errors.name}</div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]}\r\n        value={reaction.selectMilimolles}\r\n        handleChange={handleSelectChange}\r\n        containerClass=\"reaction__selectContainer\"\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.selectMilimolles ? (\r\n          <div className=\"reaction__errorAnimation\">\r\n            {props.errors.selectMilimolles}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            name={\"alcaloids\"}\r\n            handleChange={handleInputChange}\r\n            checked={reaction.alcaloids === alcaloid}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.alcaloids ? (\r\n          <div className=\"reaction__errorAnimation\">\r\n            {props.errors.alcaloids}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={reaction.technics}\r\n        handleChange={handleInputChange}\r\n        label={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.technics ? (\r\n          <div className=\"reaction__errorAnimation\">\r\n            {props.errors.technics}{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","export interface Props {\r\n  checked: boolean;\r\n  value: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  labelClass: string;\r\n  inputClass: string;\r\n  styleClass: string;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  return (\r\n    <>\r\n      <label className={props.labelClass}>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={props.value}\r\n          checked={props.checked}\r\n          onChange={props.handleChange}\r\n          className={props.inputClass}\r\n        />\r\n        <div className={props.styleClass}>{props.value}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","import { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { solventIdx } from \"../../../utils/solventIdx\";\r\n\r\nexport interface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const [checkboxValues, setCheckboxValues] = useState<string>(\r\n    reaction.atmosphere\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(handleChange({ name: \"atmosphere\", value: checkboxValues }));\r\n  }, [checkboxValues]);\r\n\r\n  const handleCheckboxChange = (e: ChangeEvent) => {\r\n    const { value, checked } = e.target;\r\n    let updatedValues;\r\n\r\n    if (checked) {\r\n      checkboxValues\r\n        ? (updatedValues = `${checkboxValues},${value}`)\r\n        : (updatedValues = value);\r\n    } else {\r\n      updatedValues = checkboxValues\r\n        .split(\",\")\r\n        .filter(val => val !== value)\r\n        .join(\",\");\r\n    }\r\n\r\n    setCheckboxValues(updatedValues);\r\n  };\r\n\r\n\r\n  const handleSelectChange = (name: string, value: string) => {\r\n    dispatch(handleChange({ name: name, value: value }));\r\n  };\r\n\r\n  const handleRadioChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    dispatch(handleChange({ name: name, value: value }));\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      {/* Checkboxes  */}\r\n\r\n      <p className=\"reaction__checkboxesHeader\">Środowisko reakcji</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {[\"Protyczna\", \"Aprotyczna\", \"Polarna\"].map(value => (\r\n          <CheckboxInput\r\n            key={crypto.randomUUID()}\r\n            value={value}\r\n            checked={reaction.atmosphere.includes(value)}\r\n            handleChange={handleCheckboxChange}\r\n            labelClass={\"reaction__checkboxLabel\"}\r\n            inputClass={\"reaction__checkboxInput\"}\r\n            styleClass={\"reaction__checkboxStyle\"}\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.atmosphere ? (\r\n          <div className=\"reaction__errorAnimation\">\r\n            {props.errors.atmosphere}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      {/* Select */}\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"Mieszanie\", \"Ogrzewanie\", \"Mikrofala\", \"Chłodzenie\"]}\r\n        value={reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        containerClass={\"reaction__selectContainer\"}\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.selectReactionCondition ? (\r\n          <div className=\"reaction__errorAnimation\">\r\n            {props.errors.selectReactionCondition}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      {/* Radio */}\r\n\r\n      <p className=\"reaction__radioInputHeader\">Rozpuszczalniki</p>\r\n      {[\"CHCl3\", \"C2H5OH\", \"C6H5CH3\"].map(solvent => {\r\n        return (\r\n          <RadioInput\r\n            key={solvent}\r\n            value={solvent}\r\n            name={\"solvent\"}\r\n            handleChange={handleRadioChange}\r\n            checked={reaction.solvent === solvent}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n            label={solventIdx(solvent)}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.solvent ? (\r\n          <div className=\"reaction__errorAnimation\">{props.errors.solvent}</div>\r\n        ) : null}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","import { ModelReaction } from \"../../../services/apiSlice\";\r\n\r\nexport const fields = [\r\n  {\r\n    name: \"startDate\",\r\n    type: \"date\",\r\n    label: \"Data otwarcia\",\r\n    value: (reaction: ModelReaction) => reaction.startDate,\r\n    errorKey: \"startDate\",\r\n  },\r\n  {\r\n    name: \"finishDate\",\r\n    type: \"date\",\r\n    label: \"Data zamknięcia\",\r\n    value: (reaction: ModelReaction) => reaction.finishDate,\r\n    errorKey: \"finishDate\",\r\n  },\r\n  {\r\n    name: \"startTime\",\r\n    type: \"time\",\r\n    label: \"Godzina rozpoczęcia\",\r\n    value: (reaction: ModelReaction) => reaction.startTime,\r\n    errorKey: \"startTime\",\r\n  },\r\n  {\r\n    name: \"finishTime\",\r\n    type: \"time\",\r\n    label: \"Godzina zakończenia\",\r\n    value: (reaction: ModelReaction) => reaction.finishTime,\r\n    errorKey: \"finishTime\",\r\n  },\r\n]\r\n","import { motion } from \"framer-motion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { fields } from \"./dataStep_3\";\r\n\r\n\r\ninterface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n\r\n  const handleInputChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n     dispatch(handleChange({ name: name, value: value }));\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      {fields.map(({ name, type, label, value, errorKey }) => (\r\n        <div key={name}>\r\n          <TextInput\r\n            type={type}\r\n            name={name}\r\n            value={value(reaction)}\r\n            handleChange={handleInputChange}\r\n            label={label}\r\n            containerClass={\"reaction__textInputContainer\"}\r\n            labelClass={\"reaction__textInputLabel\"}\r\n            inputClass={\"reaction__textInput\"}\r\n          />\r\n\r\n          <div className=\"reaction__error\">\r\n            {props.errors[errorKey] ? (\r\n              <div className=\"reaction__errorAnimation\">\r\n                {props.errors[errorKey]}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","export const summaryParams = [\r\n  \"Nazwa\",\r\n  \"Technika\",\r\n  \"Alkaloidy\",\r\n  \"Ilość moli\",\r\n  \"Warunki reakcji\",\r\n  \"Rozpuszczalnik\",\r\n  \"Atmosfera\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { motion } from \"framer-motion\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { solventIdx } from \"../../../utils/solventIdx\";\r\nimport { summaryDates, summaryParams } from \"./dataStep_4\";\r\n\r\n\r\n\r\nconst Step_4 = () => {\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const getReactionValues = Object.values(reaction);\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"step4\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Parametry:</li>\r\n\r\n        {getReactionValues.slice(0, 7).map((value, idx) => {\r\n          return (\r\n            <li key={summaryParams[idx]} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryParams[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">\r\n                {idx === 5\r\n                  ? solventIdx(value)\r\n                  : idx === 6\r\n                  ?  value.split(\",\").join(\", \")\r\n                  : value}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {getReactionValues.slice(7, 11).map((value, idx) => {\r\n          return (\r\n            <li key={summaryParams[idx]} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryDates[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","import { FormEvent, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../data/firebaseConfig\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport { useValidationForm } from \"../../../hooks/useValidationForm\";\r\nimport { useAddReactionMutation } from \"../../../services/apiSlice\";\r\nimport ReactionFormHeader from \"../reactionFormHeader/ReactionFormHeader\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleCleanFormReaction } from \"../../../redux/storeFeatures/formReactionSlice\";\r\n\r\nconst IndexFormReaction = () => {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      !user && navigate(\"/\");\r\n    });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 errors={errors} />,\r\n    <Step_2 errors={errors} />,\r\n    <Step_3 errors={errors} />,\r\n    <Step_4 />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationForm } = useValidationForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationForm());\r\n    if (Object.keys(validationForm()).length) return;\r\n    isLastStep\r\n      ? await addReaction({\r\n          ...reaction,\r\n          atmosphere: reaction.atmosphere.split(\",\").join(\", \"),\r\n        })\r\n      : next();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeoutID: NodeJS.Timeout;\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        dispatch(handleCleanFormReaction());\r\n        success.isSuccess = false as true;\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, dispatch]);\r\n\r\n  let formContent = (\r\n    <>\r\n      {step}\r\n      <div className=\"formReaction__btns\">\r\n        {!isFirstStep && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={back}\r\n            className=\"btn btn--formReaction\"\r\n          >\r\n            Wróć\r\n          </button>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn--formReaction\">\r\n          {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  if (success.error) {\r\n    if (\"error\" in success.error)\r\n      formContent = (\r\n        <div className=\"formReaction__requestMessage \">\r\n          {success.error.error}\r\n        </div>\r\n      );\r\n  }\r\n  if (success.isLoading) {\r\n    formContent = <div className=\"formReaction__loading\"></div>;\r\n  }\r\n\r\n  if (success.isSuccess) {\r\n    formContent = (\r\n      <div className=\"formReaction__requestMessage \">\r\n        Dane zapisane w liście <br /> reakcji\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"formReaction\">\r\n      <ReactionFormHeader currentStepIdx={currentStepIdx} steps={steps} />\r\n      <form onSubmit={handleSubmit} className={`wrapper formReaction__form`}>\r\n        <div className=\"formReaction__opacity\">\r\n          <div className=\"formReaction__wrapper\">{formContent}</div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexFormReaction;\r\n"],"names":["useValidationForm","validateReaction","idx","_validateReaction$atm","_validateReaction$atm2","_validateReaction$atm3","conditions","condition","name","trim","length","errorMessage","key","isNaN","selectMilimolles","includes","alcaloids","toUpperCase","technics","atmosphere","selectReactionCondition","solvent","startDate","finishDate","Date","startTime","finishTime","validationForm","_errors","undefined","flat","forEach","_ref","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","next","prev","back","props","_jsxs","className","children","_jsx","containerClass","type","value","checked","onChange","handleChange","inuptClass","id","htmlFor","labelClass","label","open","setOpen","handleOpen","state","optionsContainerClass","onClick","inputTopClass","_Fragment","selectValues","map","optionClass","inputName","alcaloidsData","dispatch","useDispatch","reaction","useSelector","formReaction","handleInputChange","e","_e$target","target","motion","initial","opacity","y","animate","transition","delay","TextInput","placeholder","inputClass","errors","SelectInput","alcaloid","RadioInput","styleClass","checkboxValues","setCheckboxValues","useEffect","handleCheckboxChange","updatedValues","concat","split","filter","val","join","handleRadioChange","_e$target2","CheckboxInput","crypto","randomUUID","solventIdx","fields","errorKey","summaryParams","summaryDates","getReactionValues","Object","values","slice","navigate","useNavigate","auth","user","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","_objectSpread","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","handleCleanFormReaction","clearTimeout","formContent","error","isLoading","ReactionFormHeader","onSubmit"],"sourceRoot":""}
{"version":3,"file":"static/js/930.87f942b3.chunk.js","mappings":"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","sources":["hooks/useValidationForm.tsx","hooks/useMultistepForm.tsx","pages/reactionForm/reactionFormHeader/ReactionFormHeader.tsx","components/inputs/radioInput/RadioInput.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/dataStep_2.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/dataStep_3.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/_indexFormReaction/IndexFormReaction.tsx"],"sourcesContent":["import { ModelReaction } from \"../services/apiSlice\";\r\n\r\nexport interface ModelValidationErrors {\r\n  [key: string]: any;\r\n  name?: string;\r\n  technics?: string;\r\n  alcaloids?: string;\r\n  selectMilimolles?: string;\r\n  atmosphere?: string;\r\n  solvent?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nexport const useValidationForm = (\r\n  validateReaction: ModelReaction,\r\n  idx?: number\r\n) => {\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: validateReaction?.name.trim().length < 6,\r\n        errorMessage: \"Min. 6 znaków\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        condition: validateReaction?.name.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          isNaN(+validateReaction.selectMilimolles) ||\r\n          +validateReaction.selectMilimolles < 1 ||\r\n          +validateReaction.selectMilimolles > 6,\r\n        errorMessage: \"Podaj liczbę: 1-6\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition:\r\n          validateReaction.alcaloids.trim().toUpperCase() !== \"GRAMINA\" &&\r\n          validateReaction.alcaloids.trim().toUpperCase() !== \"KOFEINA\" &&\r\n          validateReaction.alcaloids.trim().toUpperCase() !== \"NIKOTYNA\",\r\n        errorMessage: \"Podaj alkaloid\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: validateReaction.technics.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n      {\r\n        condition: validateReaction.technics.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition:\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"PROTYCZNE\") &&\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"APROTYCZNE\") &&\r\n          !validateReaction.atmosphere\r\n            ?.trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"POLARNE\"),\r\n        errorMessage: \"Środowisko z listy\",\r\n        key: \"atmosphere\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          validateReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIESZANIE\" &&\r\n          validateReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"OGRZEWANIE\" &&\r\n          validateReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIKROFALA\" &&\r\n          validateReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"CHŁODZENIE\",\r\n        errorMessage: \"Podaj warunki\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n      {\r\n        condition:\r\n          validateReaction.solvent?.trim().toUpperCase() !== \"CHCL3\" &&\r\n          validateReaction.solvent?.trim().toUpperCase() !== \"C2H5OH\" &&\r\n          validateReaction.solvent?.trim().toUpperCase() !== \"C6H5CH3\",\r\n        errorMessage: \"Rozp. z listy\",\r\n        key: \"solvent\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !validateReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !validateReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition:\r\n          new Date(validateReaction.startDate) >\r\n          new Date(validateReaction.finishDate),\r\n        errorMessage: \"Data po rozpoczęciu\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !validateReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !validateReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationForm = () => {\r\n    let _errors: ModelValidationErrors = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        _errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return _errors;\r\n  };\r\n\r\n  return { validationForm };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  steps: JSX.Element[];\r\n  currentStepIdx: number\r\n}\r\n\r\nconst ReactionFormHeader = (props:Props) => {\r\n      const reactionFormHeaderData = [\r\n        \"Podstawowe reagenty\",\r\n        \"Techniki laboratoryjne\",\r\n        \"Przebieg reakcji\",\r\n        \"Podsumowanie\",\r\n      ];\r\n    return (\r\n      <header className=\"wrapper wrapper--formReactionHeader \">\r\n        <p className=\"formReaction__stepIdx \">\r\n          Krok {props.currentStepIdx + 1}/{props.steps.length}\r\n        </p>\r\n        <h2 className=\"formReaction__topDescription\">\r\n          {reactionFormHeaderData[props.currentStepIdx]}\r\n        </h2>\r\n      </header>\r\n    );\r\n};\r\n\r\nexport default ReactionFormHeader;","\r\n\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    inputType?: string,\r\n    name?: string,\r\n    passedValue?: string | string[]\r\n  ) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n  label?: any;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n        {props.label? props.label :props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: string[];\r\n  label: string;\r\n  inputName: string;\r\n  value: string;\r\n  // handleChange: (vaue: string) => void;\r\n  handleChange: any;\r\n  containerClass?: string;\r\n  labelClass?: string;\r\n  optionsContainerClass?: string;\r\n  inputTopClass?: string;\r\n  optionClass?: string;\r\n}\r\n\r\nconst SelectInput = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <label className={props.labelClass}>{props.label}</label>\r\n\r\n      <div className={props.optionsContainerClass}>\r\n        <div onClick={handleOpen} className={props.inputTopClass}>\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n                  className={props.optionClass}\r\n                  onClick={() => {\r\n                    props.handleChange(props.inputName, value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { motion } from \"framer-motion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\n\r\nexport interface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const handleInputChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    dispatch(handleChange([name, value]));\r\n  };\r\n\r\n  const handleSelectChange = (name: string, value: string) => {\r\n    dispatch(handleChange([name, value]));\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={reaction.name}\r\n        handleChange={handleInputChange}\r\n        label={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        {props.errors.name}\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]}\r\n        value={reaction.selectMilimolles}\r\n        handleChange={handleSelectChange}\r\n        containerClass=\"reaction__selectContainer\"\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        {props.errors.selectMilimolles}\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            name={\"alcaloids\"}\r\n            handleChange={handleInputChange}\r\n            checked={reaction.alcaloids === alcaloid}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        {props.errors.alcaloids}\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={reaction.technics}\r\n        handleChange={handleInputChange}\r\n        label={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        {props.errors.technics}\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","import { ReactElement } from \"react\";\r\n\r\nexport interface Props {\r\n  name: string;\r\n  checked: boolean;\r\n\r\n  handleChange:any;\r\n  labelClass: string;\r\n  inputClass: string;\r\n  styleClass: string;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  return (\r\n    <>\r\n      <label className={props.labelClass}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={props.name}\r\n          checked={props.checked}\r\n          onChange={props.handleChange}\r\n          className={props.inputClass}\r\n        />\r\n        <div className={props.styleClass}>{props.name}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","export const atmosphereNameKeyData = [\r\n  { name: \"Protyczne\", key: 0 },\r\n  { name: \"Aprotyczne\", key: 1 },\r\n  { name: \"Polarne\", key: 2 },\r\n];\r\n\r\n\r\nexport const solventsData = [\"CHCl3\", \"C2H5Oh\", \"C6H5Ch3\"]","import { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { solventIdx } from \"../../../utils/solventIdx\";\r\nimport { atmosphereNameKeyData, solventsData } from \"./dataStep_2\";\r\n\r\nexport interface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const [isChecked, setIsChecked] = useState([false, false, false]);\r\n\r\n  useEffect(() => {\r\n    const newIsChecked = [...isChecked];\r\n    atmosphereNameKeyData.forEach((atmosphere, idx) => {\r\n      newIsChecked[idx] = reaction.atmosphere.includes(atmosphere.name);\r\n    });\r\n    setIsChecked(newIsChecked);\r\n  }, [reaction.atmosphere]);\r\n\r\n  const handleCheckboxChange = (idx: number, name: string) => {\r\n    const newIsChecked = [...isChecked];\r\n    newIsChecked[idx] = !newIsChecked[idx];\r\n    setIsChecked(newIsChecked);\r\n\r\n    const getNewAtmosphere = newIsChecked.reduce(\r\n      (acc: string[], checked, idx) => {\r\n        if (checked) {\r\n          acc.push(atmosphereNameKeyData[idx].name);\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n    dispatch(handleChange([\"atmosphere\", getNewAtmosphere.join(\", \")]));\r\n  };\r\n\r\n  const handleSelectChange = (name: string, value: string) => {\r\n    dispatch(handleChange([name, value]));\r\n  };\r\n\r\n  const handleInputChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    dispatch(handleChange([name, value]));\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <p className=\"reaction__checkboxesHeader\">Środowisko reakcji</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {atmosphereNameKeyData.map(({ name, key }) => (\r\n          <CheckboxInput\r\n            key={key}\r\n            name={name}\r\n            checked={isChecked[key]}\r\n            handleChange={() => handleCheckboxChange(key, name)}\r\n            labelClass={\"reaction__checkboxLabel\"}\r\n            inputClass={\"reaction__checkboxInput\"}\r\n            styleClass={\"reaction__checkboxStyle\"}\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        {props.errors.atmosphere}\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"Mieszanie\", \"Ogrzewanie\", \"Mikrofala\", \"Chłodzenie\"]}\r\n        value={reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        containerClass={\"reaction__selectContainer\"}\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        {props.errors.selectReactionCondition}\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Rozpuszczalniki</p>\r\n      {solventsData.map(solvent => {\r\n        return (\r\n          <RadioInput\r\n            key={solvent}\r\n            value={solvent}\r\n            name={\"solvent\"}\r\n            handleChange={handleInputChange}\r\n            checked={reaction.solvent === solvent}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n            label={solventIdx(solvent)}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        {props.errors.solvent}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","import { ModelReaction } from \"../../../services/apiSlice\";\r\n\r\nexport const fields = [\r\n  {\r\n    name: \"startDate\",\r\n    type: \"date\",\r\n    label: \"Data rozpoczęcia\",\r\n    value: (reaction: ModelReaction) => reaction.startDate,\r\n    errorKey: \"startDate\",\r\n  },\r\n  {\r\n    name: \"finishDate\",\r\n    type: \"date\",\r\n    label: \"Data ukończenia\",\r\n    value: (reaction: ModelReaction) => reaction.finishDate,\r\n    errorKey: \"finishDate\",\r\n  },\r\n  {\r\n    name: \"startTime\",\r\n    type: \"time\",\r\n    label: \"Godzina rozpoczęcia\",\r\n    value: (reaction: ModelReaction) => reaction.startTime,\r\n    errorKey: \"startTime\",\r\n  },\r\n  {\r\n    name: \"finishTime\",\r\n    type: \"time\",\r\n    label: \"Godzina zakończenia\",\r\n    value: (reaction: ModelReaction) => reaction.finishTime,\r\n    errorKey: \"finishTime\",\r\n  },\r\n]\r\n","import { motion } from \"framer-motion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleChange } from \"../../../redux/storeFeatures/formReactionSlice\";\r\nimport { fields } from \"./dataStep_3\";\r\n\r\n\r\ninterface Props {\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n\r\n  const handleInputChange = (e: ChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    dispatch(handleChange([name, value]));\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      {fields.map(({ name, type, label, value, errorKey }) => (\r\n        <div key={name}>\r\n          <TextInput\r\n            type={type}\r\n            name={name}\r\n            value={value(reaction)}\r\n            handleChange={handleInputChange}\r\n            label={label}\r\n            containerClass={\"reaction__textInputContainer\"}\r\n            labelClass={\"reaction__textInputLabel\"}\r\n            inputClass={\"reaction__textInput\"}\r\n          />\r\n        \r\n            <div className=\"reaction__error\">\r\n              {props.errors[errorKey]}\r\n            </div>\r\n        \r\n        </div>\r\n      ))}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","export const summaryParams = [\r\n  \"Nazwa\",\r\n  \"Technika\",\r\n  \"Alkaloidy\",\r\n  \"Ilość moli\",\r\n  \"Warunki reakcji\",\r\n  \"Rozpuszczalnik\",\r\n  \"Środowisko\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { motion } from \"framer-motion\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { solventIdx } from \"../../../utils/solventIdx\";\r\nimport { summaryDates, summaryParams } from \"./dataStep_4\";\r\n\r\n\r\n\r\nconst Step_4 = () => {\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n\r\n  const getReactionValues = Object.values(reaction) as string[];\r\n\r\n\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"step4\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Parametry:</li>\r\n\r\n        {getReactionValues.slice(0, 7).map((value: string, idx) => {\r\n          return (\r\n            <li key={summaryParams[idx]} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryParams[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">\r\n                {idx === 5 ? solventIdx(value) : value}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {getReactionValues.slice(7, 11).map((value, idx) => {\r\n          return (\r\n            <li key={crypto.randomUUID()} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">{summaryDates[idx]}</div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","import { FormEvent, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../data/firebaseConfig\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport { useValidationForm } from \"../../../hooks/useValidationForm\";\r\nimport {\r\n  ModelReaction,\r\n  useAddReactionMutation,\r\n} from \"../../../services/apiSlice\";\r\nimport ReactionFormHeader from \"../reactionFormHeader/ReactionFormHeader\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\n// import { INITIAL_DATA } from \"./dataFormReaction\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { handleCleanFormReaction } from \"../../../redux/storeFeatures/formReactionSlice\";\r\n\r\nconst IndexFormReaction = () => {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      !user && navigate(\"/\");\r\n    });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const { reaction } = useSelector((state: RootState) => state.formReaction);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 errors={errors} />,\r\n    <Step_2 errors={errors} />,\r\n    <Step_3 errors={errors} />,\r\n    <Step_4 />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationForm } = useValidationForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationForm());\r\n    if (Object.keys(validationForm()).length) return;\r\n    isLastStep ? await addReaction(reaction) : next();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeoutID: NodeJS.Timeout;\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        dispatch(handleCleanFormReaction());\r\n        success.isSuccess = false as true;\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, dispatch]);\r\n\r\n  let formContent = (\r\n    <>\r\n      {step}\r\n      <div className=\"formReaction__btns\">\r\n        {!isFirstStep && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={back}\r\n            className=\"btn btn--formReaction\"\r\n          >\r\n            Wróć\r\n          </button>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn--formReaction\">\r\n          {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  if (success.error) {\r\n    if (\"error\" in success.error)\r\n      formContent = (\r\n        <div className=\"formReaction__requestMessage \">\r\n          {success.error.error}\r\n        </div>\r\n      );\r\n  }\r\n  if (success.isLoading) {\r\n    formContent = <div className=\"formReaction__loading\"></div>;\r\n  }\r\n\r\n  if (success.isSuccess) {\r\n    formContent = (\r\n      <div className=\"formReaction__requestMessage \">\r\n        Dane zapisane w liście <br /> reakcji\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"formReaction\">\r\n      <ReactionFormHeader currentStepIdx={currentStepIdx} steps={steps} />\r\n      <form onSubmit={handleSubmit} className={`wrapper formReaction__form`}>\r\n        <div className=\"formReaction__opacity\">\r\n          <div className=\"formReaction__wrapper\">{formContent}</div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexFormReaction;\r\n"],"names":["useValidationForm","validateReaction","idx","_validateReaction$atm","_validateReaction$atm2","_validateReaction$atm3","_validateReaction$sol","_validateReaction$sol2","_validateReaction$sol3","conditions","condition","name","trim","length","errorMessage","key","isNaN","selectMilimolles","alcaloids","toUpperCase","technics","atmosphere","toLocaleUpperCase","includes","selectReactionCondition","solvent","startDate","finishDate","Date","startTime","finishTime","validationForm","_errors","undefined","flat","forEach","_ref","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","next","prev","back","props","_jsxs","className","children","_jsx","containerClass","type","value","checked","onChange","handleChange","inuptClass","id","htmlFor","labelClass","label","open","setOpen","handleOpen","state","optionsContainerClass","onClick","inputTopClass","_Fragment","selectValues","map","optionClass","inputName","alcaloidsData","dispatch","useDispatch","reaction","useSelector","formReaction","handleInputChange","e","_e$target","target","motion","initial","opacity","y","animate","transition","delay","TextInput","placeholder","inputClass","errors","SelectInput","alcaloid","RadioInput","styleClass","atmosphereNameKeyData","solventsData","isChecked","setIsChecked","useEffect","newIsChecked","_toConsumableArray","CheckboxInput","getNewAtmosphere","reduce","acc","push","join","handleCheckboxChange","solventIdx","fields","errorKey","summaryParams","summaryDates","getReactionValues","Object","values","slice","crypto","randomUUID","navigate","useNavigate","auth","user","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","handleCleanFormReaction","clearTimeout","formContent","error","isLoading","ReactionFormHeader","onSubmit"],"sourceRoot":""}
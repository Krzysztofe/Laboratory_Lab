{"version":3,"file":"static/js/750.31997229.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps2","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}
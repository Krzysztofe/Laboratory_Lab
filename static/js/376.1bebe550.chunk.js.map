{"version":3,"file":"static/js/376.1bebe550.chunk.js","mappings":"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","sources":["hooks/useMultistepForm.tsx","pages/reactionForm/step_1/Step_1.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/step_5/Step_5.tsx","pages/reactionForm/ReactionForm.tsx"],"sourcesContent":["import React, { FC, useState, ReactNode } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  const goTo = (idx: number) => {\r\n    setCurrentStepIdx(idx);\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    goTo,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","import React, { FC } from \"react\";\r\nimport { InitialData } from \"../ReactionForm\";\r\n\r\ninterface Props {\r\n  data: InitialData;\r\n  handleChange: (fields: Partial<InitialData>) => void;\r\n}\r\n\r\nconst Step_1: FC<Props> = (props): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <p>wybierz alkaloid</p>\r\n\r\n      <div className=\"radio__container\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"\"\r\n          value={props.data.alcaloids}\r\n          //   checked={}\r\n          onChange={e => props.handleChange({ alcaloids: e.target.value })}\r\n          className=\"radio\"\r\n          id=\"id\"\r\n        />\r\n        <label htmlFor=\"id\">gramina</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","import React, { FC } from \"react\";\r\nimport { InitialData } from \"../ReactionForm\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\n\r\ninterface Props {\r\n  data: InitialData;\r\n  handleChange: (fields: Partial<InitialData>) => void;\r\n}\r\nconst Step_2: FC<Props> = (props): JSX.Element => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    return props.handleChange({ substract: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>select</p>\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"substract\"}\r\n        value={props.data.substract}\r\n        onChange={handleChange}\r\n        text={\"Podaj substrakt\"}\r\n        placeholder={\"substrakt\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Step_2;\r\n","import React, { FC } from \"react\";\r\nimport { InitialData } from \"../ReactionForm\";\r\n\r\ninterface Props {\r\n  data: InitialData;\r\n  handleChange: (fields: Partial<InitialData>) => void;\r\n}\r\n\r\nconst Step_3: FC<Props> = props => {\r\n  return <div>warunki reakcji - select rozpuszczalnik - checkbox</div>;\r\n};\r\n\r\nexport default Step_3;\r\n","import React, { FC } from \"react\";\r\nimport { InitialData } from \"../ReactionForm\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\n\r\ninterface Props {\r\n  data: InitialData;\r\n  handleChange: (fields: Partial<InitialData>) => void;\r\n}\r\n\r\nconst Step_4: FC<Props> = props => {\r\n  const handleStart = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    return props.handleChange({ startDate: e.target.value });\r\n  };\r\n\r\n  const handleFinish = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    return props.handleChange({ finishDate: e.target.value });\r\n  };\r\n\r\n  const handleStartTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    return props.handleChange({ startTime: e.target.value });\r\n  };\r\n\r\n  const handleFinishTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    return props.handleChange({ finishTime: e.target.value });\r\n  };\r\n  return (\r\n    <>\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"startDate\"}\r\n        value={props.data.startDate}\r\n        onChange={handleStart}\r\n        text={\"Data rozpoczęcia\"}\r\n        placeholder={\"Data\"}\r\n        classLabel={\"\"}\r\n        classInput={\"\"}\r\n      />\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"finishDate\"}\r\n        value={props.data.finishDate}\r\n        onChange={handleFinish}\r\n        text={\"Data zakończenia\"}\r\n        placeholder={\"Data\"}\r\n        classLabel={\"\"}\r\n        classInput={\"\"}\r\n      />\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"startTime\"}\r\n        value={props.data.startTime}\r\n        onChange={handleStartTime}\r\n        text={\"Godzina rozpoczęcia\"}\r\n        placeholder={\"Godzina\"}\r\n        classLabel={\"\"}\r\n        classInput={\"\"}\r\n      />\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"finishTime\"}\r\n        value={props.data.finishTime}\r\n        onChange={handleFinishTime}\r\n        text={\"Godzina zakończenia\"}\r\n        placeholder={\"Godzina\"}\r\n        classLabel={\"\"}\r\n        classInput={\"\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","import React, { FC } from \"react\";\r\nimport { InitialData } from \"../ReactionForm\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\n\r\ninterface Props {\r\n  data: InitialData;\r\n  handleChange: (fields: Partial<InitialData>) => void;\r\n}\r\n\r\nconst Step_5: FC<Props> = props => {\r\n  return (\r\n    <>\r\n      <div>sumary</div>\r\n      <p>{props.data.startDate}</p>\r\n      <button> wyslij</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Step_5;\r\n","import React, { useState } from \"react\";\r\nimport { FormEvent } from \"react\";\r\nimport useMultistepForm from \"../../hooks/useMultistepForm\";\r\nimport Step_1 from \"./step_1/Step_1\";\r\nimport Step_2 from \"./step_2/Step_2\";\r\nimport Step_3 from \"./step_3/Step_3\";\r\nimport Step_4 from \"./step_4/Step_4\";\r\nimport Step_5 from \"./step_5/Step_5\";\r\n\r\n\r\nexport interface InitialData {\r\n  alcaloids: string;\r\n  selectMilimolles: string;\r\n  substract: string;\r\n  selectReactionCondition: string;\r\n  CHCL3: boolean;\r\n  CH3OH: boolean;\r\n  DMF: boolean;\r\n  DMSO: boolean;\r\n  C2H5OH: boolean;\r\n  startDate: string;\r\n  finishDate: string;\r\n  startTime: string;\r\n  finishTime: string;\r\n  technics: string;\r\n  mollCount: string;\r\n}\r\nconst INITIAL_DATA: InitialData = {\r\n  alcaloids: \"\",\r\n  selectMilimolles: \"\",\r\n  substract: \"\",\r\n  selectReactionCondition: \"\",\r\n  CHCL3: false,\r\n  CH3OH: false,\r\n  DMF: false,\r\n  DMSO: false,\r\n  C2H5OH: false,\r\n  startDate: \"\",\r\n  finishDate: \"\",\r\n  startTime: \"\",\r\n  finishTime: \"\",\r\n  technics: \"\",\r\n  mollCount: \"\",\r\n};\r\n\r\nconst ReactionForm = () => {\r\n  const [data, setData] = useState(INITIAL_DATA);\r\n\r\n  const handleChange = (fields: Partial<InitialData>) => {\r\n    setData(prev => {\r\n      return { ...prev, ...fields };\r\n    });\r\n  };\r\n\r\n  const { steps, currentStepIdx, step, isFirstStep, isLastStep, back, next } =\r\n    useMultistepForm([\r\n      <Step_1 data={data} handleChange={handleChange} />,\r\n      <Step_2 data={data} handleChange={handleChange} />,\r\n      <Step_3 data={data} handleChange={handleChange} />,\r\n      <Step_4 data={data} handleChange={handleChange} />,\r\n      <Step_5 data={data} handleChange={handleChange} />,\r\n    ]);\r\n\r\n  console.log(\"data\", data);\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginTop: 150 }}>\r\n      <p>\r\n        {currentStepIdx + 1}/{steps.length}\r\n      </p>\r\n      <>{step}</>\r\n\r\n      <div className=\"btns\">\r\n        {!isFirstStep && (\r\n          <button type=\"button\" onClick={back}>\r\n            {\" \"}\r\n            Wróć\r\n          </button>\r\n        )}\r\n        <button type=\"submit\"> {isLastStep ? \"Koniec\" : \"Dalej\"}</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReactionForm;\r\n"],"names":["steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","length","goTo","idx","next","prev","back","props","_jsxs","children","_jsx","className","type","name","value","data","alcaloids","onChange","e","handleChange","target","id","htmlFor","_Fragment","TextInput","substract","text","placeholder","startDate","classLabel","classInput","finishDate","startTime","finishTime","INITIAL_DATA","selectMilimolles","selectReactionCondition","CHCL3","CH3OH","DMF","DMSO","C2H5OH","technics","mollCount","setData","fields","_objectSpread","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","Step_5","console","log","onSubmit","preventDefault","style","marginTop","onClick"],"sourceRoot":""}
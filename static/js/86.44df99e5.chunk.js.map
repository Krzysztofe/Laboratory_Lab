{"version":3,"file":"static/js/86.44df99e5.chunk.js","mappings":"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","sources":["hooks/useValidationForm.tsx","pages/reactionForm/RequestMessage.tsx","hooks/useMultistepForm.tsx","pages/reactionForm/reactionFormHeader/ReactionFormHeader.tsx","components/inputs/radioInput/RadioInput.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/dataStep_2.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/_indexFormReaction/dataFormReaction.tsx","pages/reactionForm/_indexFormReaction/IndexFormReaction.tsx"],"sourcesContent":["import { ModelReaction } from \"./useReactions\";\r\n\r\nexport interface ModelValidationErrors {\r\n  [key: string]: any;\r\n  name?: string;\r\n  technics?: string;\r\n  alcaloids?: string;\r\n  selectMilimolles?: string;\r\n  substract?: string;\r\n  solvents?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nconst toString = (solventsValue: string[] | string) => {\r\n  return Array.isArray(solventsValue)\r\n    ? solventsValue.join(\", \")\r\n    : solventsValue;\r\n};\r\n\r\nexport const useValidationForm = (\r\n  editedReaction: ModelReaction,\r\n  idx?: number\r\n) => {\r\n\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: editedReaction?.name.trim().length < 6,\r\n        errorMessage: \"Min. 6 znaków\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        condition: editedReaction?.name.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          isNaN(+editedReaction.selectMilimolles) ||\r\n          +editedReaction.selectMilimolles < 1 ||\r\n          +editedReaction.selectMilimolles > 6,\r\n        errorMessage: \"Podaj liczbę: 1-6\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition:\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"GRAMINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"KOFEINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"NIKOTYNA\",\r\n        errorMessage: \"Podaj alkaloid\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.technics.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n      {\r\n        condition: editedReaction.technics.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition:\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"CH3OH\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"DMSO\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"DMF\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"CHCL3\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"C2H5OH\"),\r\n        errorMessage: \"Rozp. z listy\",\r\n        key: \"solvents\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIESZANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"OGRZEWANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIKROFALA\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"CHŁODZENIE\",\r\n        errorMessage: \"Podaj warunki\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.substract.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"substract\",\r\n      },\r\n      {\r\n        condition: editedReaction.substract.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"substract\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !editedReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition:\r\n          new Date(editedReaction.startDate) >\r\n          new Date(editedReaction.finishDate),\r\n        errorMessage: \"Data po rozpoczęciu\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationForm = () => {\r\n    let _errors: ModelValidationErrors = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        _errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return _errors;\r\n  };\r\n\r\n  return { validationForm };\r\n};\r\n","interface Props {\r\n  message: JSX.Element | string;\r\n  className: string;\r\n}\r\n\r\nconst RequestMessage = (props: Props) => {\r\n  return <div className={props.className}>{props.message}</div>;\r\n};\r\n\r\nexport default RequestMessage;\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  steps: JSX.Element[];\r\n  currentStepIdx: number\r\n}\r\n\r\nconst ReactionFormHeader = (props:Props) => {\r\n      const reactionFormHeaderData = [\r\n        \"Podstawowe reagenty\",\r\n        \"Techniki laboratoryjne\",\r\n        \"Przebieg reakcji\",\r\n        \"Podsumowanie\",\r\n      ];\r\n    return (\r\n      <header className=\"wrapper wrapper--formReactionHeader \">\r\n        <p className=\"formReaction__stepIdx \">\r\n          Krok {props.currentStepIdx + 1}/{props.steps.length}\r\n        </p>\r\n        <h2 className=\"formReaction__topDescription\">\r\n          {reactionFormHeaderData[props.currentStepIdx]}\r\n        </h2>\r\n      </header>\r\n    );\r\n};\r\n\r\nexport default ReactionFormHeader;","interface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n        {props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: string[];\r\n  label: string;\r\n  inputName: string;\r\n  value: string;\r\n  handleChange: (vaue: string) => void;\r\n  containerClass?: string;\r\n  labelClass?: string;\r\n  optionsContainerClass?: string;\r\n  inputTopClass?: string;\r\n  optionClass?: string;\r\n}\r\n\r\nconst SelectInput = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <label className={props.labelClass}>{props.label}</label>\r\n\r\n      <div className={props.optionsContainerClass}>\r\n        <div onClick={handleOpen} className={props.inputTopClass}>\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n                  className={props.optionClass}\r\n                  onClick={() => {\r\n                    props.handleChange(value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { motion } from \"framer-motion\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { ModelFormReaction } from \"../_indexFormReaction/ModelFormReaction\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\n\r\nexport interface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n\r\n  const handleChangeName = (e: ChangeEvent) => {\r\n    return props.handleChange({ name: e.target.value });\r\n  };\r\n  const handleChangeAlcaloids = (e: ChangeEvent) => {\r\n    return props.handleChange({ alcaloids: e.target.value });\r\n  };\r\n  const handleChangeTechnics = (e: ChangeEvent) => {\r\n    return props.handleChange({ technics: e.target.value });\r\n  };\r\n  const handleChangeMilimolles = (value: string) => {\r\n    props.handleChange({ selectMilimolles: value });\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={props.reaction.name}\r\n        handleChange={handleChangeName}\r\n        label={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.name}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]}\r\n        value={props.reaction.selectMilimolles}\r\n        handleChange={handleChangeMilimolles}\r\n        containerClass=\"reaction__selectContainer\"\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectMilimolles}</small>\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            name={\"alcaloids\"}\r\n            handleChange={handleChangeAlcaloids}\r\n            checked={props.reaction.alcaloids === alcaloid}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.alcaloids}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={props.reaction.technics}\r\n        handleChange={handleChangeTechnics}\r\n        label={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.technics}</small>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","import { ReactElement } from \"react\";\r\n\r\nexport interface Props {\r\n  name: string;\r\n  checked: boolean;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  labelClass: string;\r\n  inputClass: string;\r\n  styleClass: string;\r\n  labelTransform: (label: string) => any;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  const transformedLabel = props.labelTransform\r\n    ? props.labelTransform(props.name)\r\n    : props.name;\r\n\r\n  return (\r\n    <>\r\n      <label className={props.labelClass}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={props.name}\r\n          checked={props.checked}\r\n          onChange={props.handleChange}\r\n          className={props.inputClass}\r\n        />\r\n        <div className={props.styleClass}>{transformedLabel}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","export const solventsNameKeyData = [\r\n  { name: \"CHCL3\", key: 0 },\r\n  { name: \"CH3OH\", key: 1 },\r\n  { name: \"DMF\", key: 2 },\r\n  { name: \"DMSO\", key: 3 },\r\n  { name: \"C2H5OH\", key: 4 },\r\n];\r\n\r\n\r\n","import { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { ModelFormReaction } from \"../_indexFormReaction/ModelFormReaction\";\r\nimport { solventsNameKeyData } from \"./dataStep_2\";\r\n\r\nexport interface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const newIsChecked = [...isChecked];\r\n    solventsNameKeyData.forEach((solvent, idx) => {\r\n      newIsChecked[idx] = props.reaction.solvents.includes(solvent.name);\r\n    });\r\n    setIsChecked(newIsChecked);\r\n  }, [props.reaction.solvents]);\r\n\r\n  const handleCheckboxChange = (idx: number, name: string) => {\r\n    const newIsChecked = [...isChecked];\r\n    newIsChecked[idx] = !newIsChecked[idx];\r\n    setIsChecked(newIsChecked);\r\n\r\n    const getNewSolvents = newIsChecked.reduce(\r\n      (acc: string[], checked, idx) => {\r\n        if (checked) {\r\n          acc.push(solventsNameKeyData[idx].name);\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    props.handleChange({ solvents: getNewSolvents });\r\n  };\r\n\r\n  const handleSelectChange = (value: string) => {\r\n    props.handleChange({ selectReactionCondition: value });\r\n  };\r\n\r\n  const handleTextInputChange = (e: ChangeEvent) => {\r\n    props.handleChange({ substract: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <p className=\"reaction__checkboxesHeader\">Rozpuszczalnik</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {solventsNameKeyData.map(({ name, key }) => (\r\n          <CheckboxInput\r\n            key={key}\r\n            name={name}\r\n            checked={isChecked[key]}\r\n            handleChange={() => handleCheckboxChange(key, name)}\r\n            labelClass={\"reaction__checkboxLabel\"}\r\n            inputClass={\"reaction__checkboxInput\"}\r\n            styleClass={\"reaction__checkboxStyle\"}\r\n            labelTransform={(label: string) =>\r\n              label.split(\"\").map(char =>\r\n                isNaN(Number(char)) ? (\r\n                  char\r\n                ) : (\r\n                  <small className=\"numberInCheckbox\" key={crypto.randomUUID()}>\r\n                    {char}\r\n                  </small>\r\n                )\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.solvents}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"mieszanie\", \"ogrzewanie\", \"mikrofala\", \"chłodzenie\"]}\r\n        value={props.reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        containerClass={\"reaction__selectContainer\"}\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectReactionCondition}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"substract\"}\r\n        value={props.reaction.substract}\r\n        handleChange={handleTextInputChange}\r\n        label={\"Substrat\"}\r\n        placeholder={\"Substrat\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.substract}</small>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","import TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModelFormReaction } from \"../_indexFormReaction/ModelFormReaction\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\n\r\ninterface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n\r\n  const handleFieldChange =\r\n    (field: keyof ModelFormReaction) => (e: ChangeEvent) => {\r\n      props.handleChange({ [field]: e.target.value });\r\n    };\r\n\r\n  const fields = [\r\n    {\r\n      name: \"startDate\",\r\n      type: \"date\",\r\n      label: \"Data rozpoczęcia\",\r\n      value: props.reaction.startDate,\r\n      error: props.errors.startDate,\r\n    },\r\n    {\r\n      name: \"finishDate\",\r\n      type: \"date\",\r\n      label: \"Data ukończenia\",\r\n      value: props.reaction.finishDate,\r\n      error: props.errors.finishDate,\r\n    },\r\n    {\r\n      name: \"startTime\",\r\n      type: \"time\",\r\n      label: \"Godzina rozpoczęcia\",\r\n      value: props.reaction.startTime,\r\n      error: props.errors.startTime,\r\n    },\r\n    {\r\n      name: \"finishTime\",\r\n      type: \"time\",\r\n      label: \"Godzina zakończenia\",\r\n      value: props.reaction.finishTime,\r\n      error: props.errors.finishTime,\r\n    },\r\n  ] as const;\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      {fields.map(({ name, type, label, value, error }) => (\r\n        <div key={name}>\r\n          <TextInput\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            handleChange={handleFieldChange(name)}\r\n            label={label}\r\n            containerClass={\"reaction__textInputContainer\"}\r\n            labelClass={\"reaction__textInputLabel\"}\r\n            inputClass={\"reaction__textInput\"}\r\n          />\r\n          {error && (\r\n            <div className=\"reaction__error\">\r\n              <small>{error}</small>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_3;","export const summaryParams = [\r\n  \"Nazwa\",\r\n  \"Ilość milimoli\",\r\n  \"Alkaloidy\",\r\n  \"Technika\",\r\n  \"Rozpuszczalniki\",\r\n  \"Warunki reakcji\",\r\n  \"Substract\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { summaryParams, summaryDates } from \"./dataStep_4\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModelFormReaction } from \"../_indexFormReaction/ModelFormReaction\";\r\n\r\ninterface Props {\r\n  reaction: ModelFormReaction;\r\n}\r\n\r\nconst Step_5 = (props: Props) => {\r\n  const getReactionValues = Object.values(props.reaction);\r\n\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"step4\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Parametry:</li>\r\n\r\n        {getReactionValues\r\n          .slice(0, 7)\r\n          .map((value: string | string[], idx: number) => {\r\n            return (\r\n              <li key={idx} className=\"step4__reactionItem\">\r\n                <div className=\"step4__reactionProperty\">\r\n                  {summaryParams[idx]}:&nbsp;\r\n                </div>\r\n                <div className=\"step4__reactionValue\">\r\n                  {Array.isArray(value)\r\n                    ? value\r\n                        .join(\", \")\r\n                        .split(\"\")\r\n                        .map(char => {\r\n                          return isNaN(Number(char)) ? (\r\n                            char\r\n                          ) : (\r\n                            <small className=\"numberInCheckbox\">{char}</small>\r\n                          );\r\n                        })\r\n                    : value}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {getReactionValues.slice(7, 11).map((value: string, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryDates[idx]}:data\r\n              </div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_5;\r\n","import { ModelFormReaction } from \"./ModelFormReaction\";\r\nexport const INITIAL_DATA: ModelFormReaction = {\r\n  name: \"AH - \",\r\n  selectMilimolles: \"--Wybierz--\",\r\n  alcaloids: \"\",\r\n  technics: \"\",\r\n  solvents: [],\r\n  selectReactionCondition: \"--Wybierz--\",\r\n  substract: \"\",\r\n  startDate: \"\",\r\n  finishDate: \"\",\r\n  startTime: \"\",\r\n  finishTime: \"\",\r\n  isEdit: true,\r\n};\r\n\r\n\r\n","import { FormEvent, useEffect, useState } from \"react\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport { useValidationForm } from \"../../../hooks/useValidationForm\";\r\nimport { useAddReactionMutation } from \"../../../services/apiSlice\";\r\nimport RequestMessage from \"../RequestMessage\";\r\nimport ReactionFormHeader from \"../reactionFormHeader/ReactionFormHeader\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\nimport { ModelFormReaction } from \"./ModelFormReaction\";\r\nimport { INITIAL_DATA } from \"./dataFormReaction\";\r\n\r\nconst IndexFormReaction = () => {\r\n  const [reaction, setReaction] = useState(INITIAL_DATA);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n\r\n  const handleChange = (fields: Partial<ModelFormReaction>) => {\r\n    setReaction(prev => {\r\n      return { ...prev, ...fields };\r\n    });\r\n  };\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_2 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_3 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_4 reaction={reaction} />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationForm } = useValidationForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationForm());\r\n    if (Object.keys(validationForm()).length) return;\r\n    isLastStep ? await addReaction(reaction) : next();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeoutID: NodeJS.Timeout;\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        setReaction(INITIAL_DATA);\r\n        success.isSuccess = false as true;\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, setReaction]);\r\n\r\n  let formContent = (\r\n    <>\r\n      {step}\r\n      <div className=\"formReaction__btns\">\r\n        {!isFirstStep && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={back}\r\n            className=\"btn btn--formReaction\"\r\n          >\r\n            Wróć\r\n          </button>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn--formReaction\">\r\n          {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  if (success.error) {\r\n    if (\"error\" in success.error)\r\n      formContent = (\r\n        <RequestMessage\r\n          message={success.error.error}\r\n          className=\"formReaction__requestMessage\"\r\n        />\r\n      );\r\n  }\r\n  if (success.isLoading) {\r\n    formContent = (\r\n      <RequestMessage\r\n        message={<> Wysyła... </>}\r\n        className=\"formReaction__requestMessage\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (success.isSuccess) {\r\n    formContent = (\r\n      <RequestMessage\r\n        message={\r\n          <>\r\n            Dane wysłane i zapisane <br /> w liście reakcji\r\n          </>\r\n        }\r\n        className=\"formReaction__requestMessage\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"formReaction\">\r\n      <ReactionFormHeader currentStepIdx={currentStepIdx} steps={steps} />\r\n      <form onSubmit={handleSubmit} className={`wrapper formReaction__form`}>\r\n        <div className=\"formReaction__opacity\">\r\n          <div className=\"formReaction__wrapper\">{formContent}</div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexFormReaction;\r\n"],"names":["toString","solventsValue","Array","isArray","join","useValidationForm","editedReaction","idx","conditions","condition","name","trim","length","errorMessage","key","isNaN","selectMilimolles","alcaloids","toUpperCase","technics","solvents","toLocaleUpperCase","includes","selectReactionCondition","substract","startDate","finishDate","Date","startTime","finishTime","validationForm","_errors","undefined","flat","forEach","_ref","props","_jsx","className","children","message","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","next","prev","back","_jsxs","containerClass","type","value","checked","onChange","handleChange","inuptClass","id","htmlFor","labelClass","open","setOpen","handleOpen","state","label","optionsContainerClass","onClick","inputTopClass","_Fragment","selectValues","map","optionClass","alcaloidsData","handleChangeAlcaloids","e","target","motion","initial","opacity","y","animate","transition","delay","TextInput","reaction","placeholder","inputClass","errors","SelectInput","inputName","alcaloid","RadioInput","transformedLabel","labelTransform","styleClass","solventsNameKeyData","isChecked","setIsChecked","useEffect","newIsChecked","_toConsumableArray","solvent","CheckboxInput","getNewSolvents","reduce","acc","push","handleCheckboxChange","split","char","Number","crypto","randomUUID","fields","error","field","_defineProperty","summaryParams","summaryDates","getReactionValues","Object","values","slice","INITIAL_DATA","isEdit","setReaction","_useState3","_useState4","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","_objectSpread","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","clearTimeout","formContent","RequestMessage","isLoading","ReactionFormHeader","onSubmit"],"sourceRoot":""}
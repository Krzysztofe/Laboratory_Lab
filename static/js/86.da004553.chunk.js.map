{"version":3,"file":"static/js/86.da004553.chunk.js","mappings":"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","sources":["pages/reactionForm/formReaction/dataFormReaction.tsx","hooks/useMultistepForm.tsx","components/inputs/radioInput/RadioInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/dataStep_2.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/formReaction/FormReaction.tsx","pages/tableReactions/tableEditForm/useValidationEditForm.tsx"],"sourcesContent":["import { ModelFormReaction } from \"./ModelFormReaction\";\r\nexport const INITIAL_DATA: ModelFormReaction = {\r\n  name: \"\",\r\n  selectMilimolles: \"--Wybierz--\",\r\n  alcaloids: \"\",\r\n  technics: \"\",\r\n  solvents: [],\r\n  selectReactionCondition: \"--Wybierz--\",\r\n  substract: \"\",\r\n  startDate: \"\",\r\n  finishDate: \"\",\r\n  startTime: \"\",\r\n  finishTime: \"\",\r\n  isEdit: true,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  value: string;\r\n  onChange: any;\r\n  checked: boolean;\r\n  handleBlur?: any;\r\n  classContainer?: string;\r\n  classInupt?: string;\r\n  classLabel?: string;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.classContainer}>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"\"\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.onChange}\r\n        onBlur={props.handleBlur}\r\n        className={props.classInupt}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.classLabel}>\r\n        {props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: number[] | string[];\r\n  label: string;\r\n  inputName: any;\r\n  value: string | number;\r\n  handleChange: any;\r\n  handleBlur?: any;\r\n  classContainer?: string;\r\n  classLabel?: string;\r\n  classOptionsContainer?: string;\r\n  classInputTop?: string;\r\n  classOption?:string\r\n}\r\n\r\n\r\n\r\n\r\nconst SelectInput = (props:Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.classContainer}>\r\n      <label className={props.classLabel}>{props.label}</label>\r\n\r\n      <div className={props.classOptionsContainer}>\r\n        <div\r\n          onClick={handleOpen}\r\n          className={props.classInputTop}\r\n        >\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n               className = {props.classOption}\r\n                  onClick={() => {\r\n                    props.handleChange(value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\"\r\nexport interface Props {\r\n  reaction: any;\r\n  handleChange: any;\r\n  errors: any;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n  const handleAlcaloidsChange = (e: ChangeEvent) => {\r\n    return props.handleChange({ alcaloids: e.target.value });\r\n  };\r\n\r\n  const handleTechnics = (e: ChangeEvent) => {\r\n    return props.handleChange({ technics: e.target.value });\r\n  };\r\n  const handleTextChange = (e: ChangeEvent) => {\r\n    return props.handleChange({ name: e.target.value });\r\n  };\r\n  const handleSelectChange = (value: string | number) => {\r\n    props.handleChange({ selectMilimolles: value });\r\n  };\r\n  return (\r\n    <section className=\"stepContainer\">\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={props.reaction.name}\r\n        onChange={handleTextChange}\r\n        text={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.name}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[1, 2, 3, 4, 5, 6]}\r\n        value={props.reaction.selectMilimolles}\r\n        handleChange={handleSelectChange}\r\n        classContainer=\"reaction__selectContainer\"\r\n        classLabel=\"reaction__selectLabel\"\r\n        classInputTop=\"reaction__selectTop\"\r\n        classOptionsContainer=\"reaction__selectOptionsContainer\"\r\n        classOption=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectMilimolles}</small>\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            onChange={handleAlcaloidsChange}\r\n            checked={props.reaction.alcaloids === alcaloid}\r\n            classContainer={\"reaction__radioContainer\"}\r\n            classInupt={\"reaction__radioInput\"}\r\n            classLabel={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.alcaloids}</small>\r\n      </div>\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={props.reaction.technics}\r\n        onChange={handleTechnics}\r\n        text={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.technics}</small>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","export interface Props {\r\n  name: string;\r\n  checked: boolean;\r\n  onChange: any;\r\n  classLabel: string;\r\n  classInput: string;\r\n  classStyle: string;\r\n  labelTransform?: (label: string) => any;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  const transformedLabel = props.labelTransform\r\n    ? props.labelTransform(props.name)\r\n    : props.name;\r\n\r\n  return (\r\n    <>\r\n      <label className={props.classLabel}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={props.name}\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          className={props.classInput}\r\n        />\r\n        <div className={props.classStyle}>{transformedLabel}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","export const solventsNameKeyData = [\r\n  { name: \"CHCL3\", key: 0 },\r\n  { name: \"CH3OH\", key: 1 },\r\n  { name: \"DMF\", key: 2 },\r\n  { name: \"DMSO\", key: 3 },\r\n  { name: \"C2H5OH\", key: 4 },\r\n];\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { solventsNameKeyData } from \"./dataStep_2\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n  errors: any;\r\n  handleChange: any;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const newIsChecked = [...isChecked];\r\n    solventsNameKeyData.forEach((solvent, idx) => {\r\n      newIsChecked[idx] = props.reaction.solvents.includes(solvent.name);\r\n    });\r\n    setIsChecked(newIsChecked);\r\n  }, [props.reaction.solvents]);\r\n\r\n  const handleCheckboxChange = (idx: number, name: string) => {\r\n    const newIsChecked = [...isChecked];\r\n    newIsChecked[idx] = !newIsChecked[idx];\r\n    setIsChecked(newIsChecked);\r\n\r\n    const getNewSolvents = newIsChecked.reduce(\r\n      (acc: string[], checked, idx) => {\r\n        if (checked) {\r\n          acc.push(solventsNameKeyData[idx].name);\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    props.handleChange({ solvents: getNewSolvents });\r\n  };\r\n\r\n  const handleSelectChange = (value: string) => {\r\n    props.handleChange({ selectReactionCondition: value });\r\n  };\r\n\r\n  const handleTextInputChange = (e: ChangeEvent) => {\r\n    props.handleChange({ substract: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"stepContainer\">\r\n      <p className=\"reaction__checkboxesHeader\">Rozpuszczalnik</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {solventsNameKeyData.map(({ name, key }) => (\r\n          <CheckboxInput\r\n            key={key}\r\n            name={name}\r\n            checked={isChecked[key]}\r\n            onChange={() => handleCheckboxChange(key, name)}\r\n            classLabel={\"reaction__checkboxLabel\"}\r\n            classInput={\"reaction__checkboxInput\"}\r\n            classStyle={\"reaction__checkboxStyle\"}\r\n            labelTransform={(label: string) =>\r\n              label.split(\"\").map(char =>\r\n                isNaN(Number(char)) ? (\r\n                  char\r\n                ) : (\r\n                  <small className=\"numberInCheckbox\" key={crypto.randomUUID()}>\r\n                    {char}\r\n                  </small>\r\n                )\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.solvents}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"mieszanie\", \"ogrzewanie\", \"mikrofala\", \"chłodzenie\"]}\r\n        value={props.reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        classContainer=\"reaction__selectContainer\"\r\n        classLabel=\"reaction__selectLabel\"\r\n        classInputTop=\"reaction__selectTop\"\r\n        classOptionsContainer=\"reaction__selectOptionsContainer\"\r\n        classOption=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectReactionCondition}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"substract\"}\r\n        value={props.reaction.substract}\r\n        onChange={handleTextInputChange}\r\n        text={\"Substrat\"}\r\n        placeholder={\"Substrat\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.substract}</small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","import { FC } from \"react\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n  errors: any;\r\n  handleChange: any;\r\n}\r\n\r\nconst Step_4 = (props: Props) => {\r\n  const handleStarthDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ startDate: e.target.value });\r\n  };\r\n\r\n  const handleFinishDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishDate: e.target.value });\r\n  };\r\n\r\n  const handleStartTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ startTime: e.target.value });\r\n  };\r\n\r\n  const handleFinishTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className=\"stepContainer\">\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"startDate\"}\r\n        value={props.reaction.startDate}\r\n        onChange={handleStarthDate}\r\n        text={\"Data rozpoczęcia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"finishDate\"}\r\n        value={props.reaction.finishDate}\r\n        onChange={handleFinishDate}\r\n        text={\"Data ukończenia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"startTime\"}\r\n        value={props.reaction.startTime}\r\n        onChange={handleStartTime}\r\n        text={\"Godzina rozpoczęcia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startTime}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"finishTime\"}\r\n        value={props.reaction.finishTime}\r\n        onChange={handleFinishTime}\r\n        text={\"Godzina zakończenia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishTime}</small>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","export const summaryConditions = [\r\n  \"Nazwa\",\r\n  \"Ilość milimoli\",\r\n  \"Alkaloidy\",\r\n  \"Technika\",\r\n  \"Rozpuszczalniki\",\r\n  \"Warunki reakcji\",\r\n  \"Substract\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { summaryConditions, summaryDates } from \"./dataStep_4\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n}\r\n\r\nconst Step_5 = (props: Props) => {\r\n\r\n  const get = Object.values(props.reaction);\r\n\r\n\r\n  return (\r\n    <section className=\"stepContainer\">\r\n      <div className=\"step4__header\">Podsumowanie</div>\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Warunki:</li>\r\n\r\n        {get.slice(0, 7).map((value: any, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryConditions[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">\r\n                {Array.isArray(value) ? value.flat().join(\", \") : value}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {get.slice(7, 11).map((value: any, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryDates[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Step_5;\r\n","import { useState, useEffect, FormEvent } from \"react\";\r\nimport {\r\n  useReactionsQuery,\r\n  useAddReactionMutation,\r\n} from \"../../../services/apiSlice\";\r\nimport { INITIAL_DATA } from \"./dataFormReaction\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\nimport { useValidationEditForm } from \"../../tableReactions/tableEditForm/useValidationEditForm\";\r\nimport { ModelFormReaction } from \"./ModelFormReaction\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\n\r\nconst FormReaction = () => {\r\n  const { error, isLoading } = useReactionsQuery(undefined);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n  const [reaction, setReaction] = useState(INITIAL_DATA);\r\n\r\n  const handleChange = (fields: Partial<ModelFormReaction>) => {\r\n    setReaction(prev => {\r\n      return { ...prev, ...fields };\r\n    });\r\n\r\n    // setReaction({...reaction, [e.target.name]:e.target.value})\r\n  };\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_2 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_3 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_4 reaction={reaction} />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationEditForm } = useValidationEditForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationEditForm());\r\n    if (Object.keys(validationEditForm()).length) return;\r\n    isLastStep ? await addReaction(reaction) : next();\r\n  };\r\n\r\n  // if (isLoading) return <div>Loading..X.</div>;\r\n\r\n  // if (error) {\r\n  //   if (\"error\" in error) return <div>{error.error}</div>;\r\n  // }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let timeoutID: any;\r\n\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        setReaction(INITIAL_DATA);\r\n        success.isSuccess = false as true;\r\n      }, 4000);\r\n    }\r\n\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, setReaction]);\r\n\r\n  const reactionFormHeaderData = [\"Opis 1\", \"Opis_2\", \"Opis_3\", \"opis_4\"];\r\n\r\n  return (\r\n    <main className=\"mainFormReaction\">\r\n      <h4 className=\"wrapper formReaction__stepIdx\">\r\n        Krok {currentStepIdx + 1}/{steps.length}\r\n      </h4>\r\n      <h3 className=\"wrapper formReaction__topDescription\">\r\n        {reactionFormHeaderData[currentStepIdx]}\r\n      </h3>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={`formReaction ${isLoading && \"formReaction--loading\"}`}\r\n      >\r\n        <div className=\"formReaction__wrapper\">\r\n          <>{isLoading && <h3>Loading</h3>}</>\r\n          {success.isSuccess ? (\r\n            <h3 className=\"formReaction__requestMessage\">Dane wysłane</h3>\r\n          ) : (\r\n            <>{step}</>\r\n          )}\r\n          {!success.isSuccess && (\r\n            <div className=\"formReaction__btns\">\r\n              {!isFirstStep && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={back}\r\n                  className=\"formReaction__btn\"\r\n                >\r\n                  Wróć\r\n                </button>\r\n              )}\r\n              <button type=\"submit\" className=\"formReaction__btn\">\r\n                {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FormReaction;\r\n","export interface Error {\r\n  error?: boolean;\r\n  name?: any;\r\n  technics?: any;\r\n  alcaloids?: any;\r\n  selectMilimolles?: string;\r\n  substract?: string;\r\n  solvents?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nexport const useValidationEditForm = (editedReaction: any, idx?: any) => {\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: editedReaction.name.length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          editedReaction.selectMilimolles === \"--Wybierz--\" ||\r\n          !editedReaction.selectMilimolles,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition: !editedReaction.alcaloids,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.technics.length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !editedReaction.solvents.length,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"solvents\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.selectReactionCondition === \"--Wybierz--\",\r\n        errorMessage: \"Wymagane\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.substract.length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"substract\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !editedReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationEditForm = () => {\r\n    const errors: any = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return errors;\r\n  };\r\n\r\n  return { validationEditForm };\r\n};\r\n"],"names":["INITIAL_DATA","name","selectMilimolles","alcaloids","technics","solvents","selectReactionCondition","substract","startDate","finishDate","startTime","finishTime","isEdit","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","length","next","prev","back","props","_jsxs","className","classContainer","children","_jsx","type","value","checked","onChange","onBlur","handleBlur","classInupt","id","htmlFor","classLabel","alcaloidsData","open","setOpen","handleOpen","state","label","classOptionsContainer","onClick","classInputTop","_Fragment","selectValues","map","classOption","handleChange","handleAlcaloidsChange","e","target","TextInput","reaction","text","placeholder","classInput","errors","SelectInput","inputName","alcaloid","RadioInput","transformedLabel","labelTransform","classStyle","solventsNameKeyData","key","isChecked","setIsChecked","useEffect","newIsChecked","_toConsumableArray","forEach","solvent","idx","includes","_ref","CheckboxInput","getNewSolvents","reduce","acc","push","handleCheckboxChange","split","char","isNaN","Number","crypto","randomUUID","summaryConditions","summaryDates","get","Object","values","slice","Array","isArray","flat","join","_useReactionsQuery","useReactionsQuery","undefined","isLoading","error","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","_useState3","_useState4","setReaction","fields","_objectSpread","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","validationEditForm","useValidationEditForm","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","clearTimeout","onSubmit","concat","editedReaction","conditions","condition","errorMessage"],"sourceRoot":""}
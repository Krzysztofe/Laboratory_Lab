{"version":3,"file":"static/js/855.37048bbe.chunk.js","mappings":"4IAuBA,IAdkB,SAACA,GACjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIN,EAAMO,KAAKJ,UACnBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,qBAAoBC,SAAEH,EAAMQ,cAGhDJ,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASP,UAAU,sBAAqBC,SAClDH,EAAMU,cAIf,C,2HCyEA,UArFc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,oBAAwB,SAAAC,GACtBA,GAAQJ,EAAS,iBACnB,GACF,GAAG,IAEH,IAAMK,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,WACPC,SAAU,UAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaH,MAAM,eAAeI,SAAS,kBAClDH,SAAUE,EAAAA,KAAaC,SAAS,yBAElCC,SAAU,SAAAC,GACR,IAAQN,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,UACfM,EAAAA,EAAAA,IAA2BZ,EAAAA,EAAMK,EAAOC,GACrCO,MAAK,kBAAMhB,EAAS,iBAAiB,IACrCiB,OAAM,SAAAC,GAAK,OAAIC,MAAM,KAAK,GAC/B,IAGF,OACE7B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,sBAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAK2B,MAAS,CAACC,OAAQ,OACvB5B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,sBAC7BF,EAAAA,EAAAA,MAAA,QAAMuB,SAAUR,EAAOiB,aAAc/B,UAAU,oBAAmBC,SAAA,EAChEF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,wBAELC,EAAAA,EAAAA,KAAA,SAAM,8BAIRA,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRzB,KAAM,OACN0B,KAAM,QACNC,MAAOpB,EAAOS,OAAON,MACrBkB,SAAUrB,EAAOsB,aACjBC,WAAYvB,EAAOuB,WACnBC,KAAM,QACNC,YAAa,QACbC,eAAgB,uBAChBC,WAAY,mBACZC,WAAY,sBAEdxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAC9Ba,EAAO6B,QAAQ1B,OAASH,EAAO8B,OAAO3B,QACrCf,EAAAA,EAAAA,KAAA,SAAAD,SAAQa,EAAO8B,OAAO3B,WAI1Bf,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRzB,KAAM,WACN0B,KAAM,WACNC,MAAOpB,EAAOS,OAAOL,SACrBiB,SAAUrB,EAAOsB,aACjBC,WAAYvB,EAAOuB,WACnBC,KAAM,aACNC,YAAa,aACbC,eAAgB,uBAChBC,WAAY,mBACZC,WAAY,sBAGdxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAC9Ba,EAAO6B,QAAQzB,UAAYJ,EAAO8B,OAAO1B,WACxChB,EAAAA,EAAAA,KAAA,SAAAD,SAAQa,EAAO8B,OAAO1B,cAI1BhB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CACRxC,KAAM,YACNG,UAAU,mBACVF,SAAS,+BAMnB,C","sources":["components/btnsLogin/BtnsLogin.tsx","pages/login/Login.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  link: string;\r\n  textRight: string;\r\n  textLeft: string;\r\n}\r\n\r\n\r\nconst BtnsLogin = (props:Props )=> {\r\n  return (\r\n    <div className=\"btnsLogin\">\r\n      <Link to={props.link}>\r\n        <button className=\"btn btnsLogin__btn\">{props.textLeft}</button>\r\n      </Link>\r\n\r\n      <button type=\"submit\" className=\" btn btnsLogin__btn\">\r\n        {props.textRight}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BtnsLogin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextInput from \"../../components/inputs/textInput/TextInput\";\r\nimport BtnsLogin from \"../../components/btnsLogin/BtnsLogin\";\r\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      user && navigate(\"/reaction-form\");\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"ww@wp.pl\",\r\n      password: \"wwwwww\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Podaj email\").required(\"Email wymagany\"),\r\n      password: Yup.string().required(\"Hasło wymagane\"),\r\n    }),\r\n    onSubmit: values => {\r\n      const { email, password } = values;\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => navigate(\"/reaction-form\"))\r\n        .catch(error => alert(\"PP\"));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <main className=\"wrapper main__login\">\r\n      <div style = {{height: 86}}></div>\r\n      <h2 className=\"login__title\">Zaloguj się</h2>\r\n      <form onSubmit={formik.handleSubmit} className=\"wrapper loginForm\">\r\n        <small>\r\n          login: &nbsp; ww@wp.pl\r\n          <br />\r\n          hasło: &nbsp; wwwwww\r\n        </small>\r\n\r\n        <TextInput\r\n          type={\"text\"}\r\n          name={\"email\"}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          handleBlur={formik.handleBlur}\r\n          text={\"Email\"}\r\n          placeholder={\"Email\"}\r\n          classContainer={\"loginForm__container\"}\r\n          classLabel={\"loginForm__label\"}\r\n          classInput={\"loginForm__input\"}\r\n        />\r\n        <div className=\"loginForm__error\">\r\n          {formik.touched.email && formik.errors.email && (\r\n            <small>{formik.errors.email}</small>\r\n          )}\r\n        </div>\r\n\r\n        <TextInput\r\n          type={\"password\"}\r\n          name={\"password\"}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          handleBlur={formik.handleBlur}\r\n          text={\"Hasło\"}\r\n          placeholder={\"Hasło\"}\r\n          classContainer={\"loginForm__container\"}\r\n          classLabel={\"loginForm__label\"}\r\n          classInput={\"loginForm__input\"}\r\n        />\r\n\r\n        <div className=\"loginForm__error\">\r\n          {formik.touched.password && formik.errors.password && (\r\n            <small>{formik.errors.password}</small>\r\n          )}\r\n        </div>\r\n\r\n        <BtnsLogin\r\n          link={\"/register\"}\r\n          textRight=\"Zaloguj się\"\r\n          textLeft=\"Załuż konto\"\r\n          // inputFocus={inputFocus}\r\n        />\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["props","_jsxs","className","children","_jsx","Link","to","link","textLeft","type","textRight","navigate","useNavigate","useEffect","auth","user","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","onSubmit","values","signInWithEmailAndPassword","then","catch","error","alert","style","height","handleSubmit","TextInput","name","value","onChange","handleChange","handleBlur","text","placeholder","classContainer","classLabel","classInput","touched","errors","BtnsLogin"],"sourceRoot":""}
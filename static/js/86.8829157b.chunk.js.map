{"version":3,"file":"static/js/86.8829157b.chunk.js","mappings":"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","sources":["hooks/useValidationForm.tsx","pages/reactionForm/formReaction/dataFormReaction.tsx","hooks/useMultistepForm.tsx","components/inputs/radioInput/RadioInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/dataStep_2.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/formReaction/FormReaction.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { FaLaptopHouse } from \"react-icons/fa\";\r\n\r\nexport interface Error {\r\n  error?: boolean;\r\n  name?: any;\r\n  technics?: any;\r\n  alcaloids?: any;\r\n  selectMilimolles?: string;\r\n  substract?: string;\r\n  solvents?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nconst toArray = (solventsValue: any) => {\r\n  if (!Array.isArray(solventsValue)) {\r\n    return [solventsValue];\r\n  }\r\n  return solventsValue;\r\n};\r\n\r\nexport const useValidationForm = (editedReaction: any, idx?: any) => {\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: editedReaction.name.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        condition: editedReaction.name.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          isNaN(+editedReaction.selectMilimolles) ||\r\n          +editedReaction.selectMilimolles < 1 ||\r\n          +editedReaction.selectMilimolles > 6,\r\n        errorMessage: \"Podaj liczbę: 1-6\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition:\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"GRAMINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"KOFEINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"NIKOTYNA\",\r\n        errorMessage: \"Podaj alkaloid\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.technics.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n      {\r\n        condition: editedReaction.technics.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition:\r\n          toArray(editedReaction.solvents).filter(value =>\r\n            [\"CHCL3\", \"CH3OH\", \"DMF\", \"DMSO\", \"C2H5OH\"].includes(value)\r\n          ).length === 0,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"solvents\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIESZANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"OGRZEWANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIKROFALA\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"CHŁODZENIE\",\r\n        errorMessage: \"Podaj warunki\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.substract.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"substract\",\r\n      },\r\n      {\r\n        condition: editedReaction.substract.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"substract\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !editedReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition:\r\n          new Date(editedReaction.startDate) >\r\n          new Date(editedReaction.finishDate),\r\n        errorMessage: \"Data po rozpoczęciu\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationForm = () => {\r\n    let _errors: any = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        _errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return _errors;\r\n  };\r\n\r\n  return { validationForm };\r\n};\r\n","import { ModelFormReaction } from \"./ModelFormReaction\";\r\nexport const INITIAL_DATA: ModelFormReaction = {\r\n  name: \"\",\r\n  selectMilimolles: \"--Wybierz--\",\r\n  alcaloids: \"\",\r\n  technics: \"\",\r\n  solvents: [],\r\n  selectReactionCondition: \"--Wybierz--\",\r\n  substract: \"\",\r\n  startDate: \"\",\r\n  finishDate: \"\",\r\n  startTime: \"\",\r\n  finishTime: \"\",\r\n  isEdit: true,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: any;\r\n  checked: boolean;\r\n  handleBlur?: any;\r\n  classContainer?: string;\r\n  classInupt?: string;\r\n  classLabel?: string;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.classContainer}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        onBlur={props.handleBlur}\r\n        className={props.classInupt}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.classLabel}>\r\n        {props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: number[] | string[];\r\n  label: string;\r\n  inputName: any;\r\n  value: string | number;\r\n  handleChange: any;\r\n  handleBlur?: any;\r\n  classContainer?: string;\r\n  classLabel?: string;\r\n  classOptionsContainer?: string;\r\n  classInputTop?: string;\r\n  classOption?: string;\r\n}\r\n\r\nconst SelectInput = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.classContainer}>\r\n      <label className={props.classLabel}>{props.label}</label>\r\n\r\n      <div className={props.classOptionsContainer}>\r\n        <div\r\n          onClick={handleOpen}\r\n          className={props.classInputTop}\r\n        >\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n                  className={props.classOption}\r\n                  onClick={() => {\r\n                    props.handleChange(value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport interface Props {\r\n  reaction: any;\r\n  handleChange: any;\r\n  errors: any;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n\r\n\r\n   const handleChangeName = (e: ChangeEvent) => {\r\n    return props.handleChange({ name: e.target.value });\r\n  };\r\n  const handleChangeAlcaloids = (e: ChangeEvent) => {\r\n    return props.handleChange({ alcaloids: e.target.value });\r\n  };\r\n\r\n  const handleChangeTechnics = (e: ChangeEvent) => {\r\n    return props.handleChange({ technics: e.target.value });\r\n  };\r\n \r\n  const handleChangeMilimolles = (value: string | number) => {\r\n    props.handleChange({ selectMilimolles: value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <motion.section\r\n      // className=\"stepContainer\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={props.reaction.name}\r\n        onChange={handleChangeName}\r\n        text={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.name}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[1, 2, 3, 4, 5, 6]}\r\n        value={props.reaction.selectMilimolles}\r\n        handleChange={handleChangeMilimolles}\r\n        classContainer=\"reaction__selectContainer\"\r\n        classLabel=\"reaction__selectLabel\"\r\n        classInputTop=\"reaction__selectTop\"\r\n        classOptionsContainer=\"reaction__selectOptionsContainer\"\r\n        classOption=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectMilimolles}</small>\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            name={\"alcaloids\"}\r\n            handleChange={handleChangeAlcaloids}\r\n            checked={props.reaction.alcaloids === alcaloid}\r\n            classContainer={\"reaction__radioContainer\"}\r\n            classInupt={\"reaction__radioInput\"}\r\n            classLabel={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.alcaloids}</small>\r\n      </div>\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={props.reaction.technics}\r\n        onChange={handleChangeTechnics}\r\n        text={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.technics}</small>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","export interface Props {\r\n  name: string;\r\n  checked: boolean;\r\n  onChange: any;\r\n  classLabel: string;\r\n  classInput: string;\r\n  classStyle: string;\r\n  labelTransform?: (label: string) => any;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  const transformedLabel = props.labelTransform\r\n    ? props.labelTransform(props.name)\r\n    : props.name;\r\n\r\n  return (\r\n    <>\r\n      <label className={props.classLabel}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={props.name}\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          className={props.classInput}\r\n        />\r\n        <div className={props.classStyle}>{transformedLabel}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","export const solventsNameKeyData = [\r\n  { name: \"CHCL3\", key: 0 },\r\n  { name: \"CH3OH\", key: 1 },\r\n  { name: \"DMF\", key: 2 },\r\n  { name: \"DMSO\", key: 3 },\r\n  { name: \"C2H5OH\", key: 4 },\r\n];\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { solventsNameKeyData } from \"./dataStep_2\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n  errors: any;\r\n  handleChange: any;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const newIsChecked = [...isChecked];\r\n    solventsNameKeyData.forEach((solvent, idx) => {\r\n      newIsChecked[idx] = props.reaction.solvents.includes(solvent.name);\r\n    });\r\n    setIsChecked(newIsChecked);\r\n  }, [props.reaction.solvents]);\r\n\r\n  const handleCheckboxChange = ( idx: number, name: string) => {\r\n    const newIsChecked = [...isChecked];\r\n    newIsChecked[idx] = !newIsChecked[idx];\r\n    setIsChecked(newIsChecked);\r\n\r\n    const getNewSolvents = newIsChecked.reduce(\r\n      (acc: string[], checked, idx) => {\r\n        if (checked) {\r\n          acc.push(solventsNameKeyData[idx].name);\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    props.handleChange({solvents: getNewSolvents});\r\n  };\r\n\r\n  const handleSelectChange = (value: string) => {\r\n    props.handleChange({ selectReactionCondition: value });\r\n  };\r\n\r\n  const handleTextInputChange = (e: ChangeEvent) => {\r\n    props.handleChange({ substract: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      // className=\"stepContainer\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <p className=\"reaction__checkboxesHeader\">Rozpuszczalnik</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {solventsNameKeyData.map(({ name, key }) => (\r\n          <CheckboxInput\r\n            key={key}\r\n            name={name}\r\n            checked={isChecked[key]}\r\n            onChange={() => handleCheckboxChange(key, name)}\r\n            classLabel={\"reaction__checkboxLabel\"}\r\n            classInput={\"reaction__checkboxInput\"}\r\n            classStyle={\"reaction__checkboxStyle\"}\r\n            labelTransform={(label: string) =>\r\n              label.split(\"\").map(char =>\r\n                isNaN(Number(char)) ? (\r\n                  char\r\n                ) : (\r\n                  <small className=\"numberInCheckbox\" key={crypto.randomUUID()}>\r\n                    {char}\r\n                  </small>\r\n                )\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.solvents}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"mieszanie\", \"ogrzewanie\", \"mikrofala\", \"chłodzenie\"]}\r\n        value={props.reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        classContainer=\"reaction__selectContainer\"\r\n        classLabel=\"reaction__selectLabel\"\r\n        classInputTop=\"reaction__selectTop\"\r\n        classOptionsContainer=\"reaction__selectOptionsContainer\"\r\n        classOption=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectReactionCondition}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"substract\"}\r\n        value={props.reaction.substract}\r\n        onChange={handleTextInputChange}\r\n        text={\"Substrat\"}\r\n        placeholder={\"Substrat\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.substract}</small>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n  errors: any;\r\n  handleChange: any;\r\n}\r\n\r\nconst Step_4 = (props: Props) => {\r\n  const handleStarthDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ startDate: e.target.value });\r\n  };\r\n\r\n  const handleFinishDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishDate: e.target.value });\r\n  };\r\n\r\n  const handleStartTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ startTime: e.target.value });\r\n  };\r\n\r\n  const handleFinishTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      // className=\"stepContainer\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"startDate\"}\r\n        value={props.reaction.startDate}\r\n        onChange={handleStarthDate}\r\n        text={\"Data rozpoczęcia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"finishDate\"}\r\n        value={props.reaction.finishDate}\r\n        onChange={handleFinishDate}\r\n        text={\"Data ukończenia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"startTime\"}\r\n        value={props.reaction.startTime}\r\n        onChange={handleStartTime}\r\n        text={\"Godzina rozpoczęcia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startTime}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"finishTime\"}\r\n        value={props.reaction.finishTime}\r\n        onChange={handleFinishTime}\r\n        text={\"Godzina zakończenia\"}\r\n        classContainer={\"reaction__textInputContainer\"}\r\n        classLabel={\"reaction__textInputLabel\"}\r\n        classInput={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishTime}</small>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","export const summaryParams = [\r\n  \"Nazwa\",\r\n  \"Ilość milimoli\",\r\n  \"Alkaloidy\",\r\n  \"Technika\",\r\n  \"Rozpuszczalniki\",\r\n  \"Warunki reakcji\",\r\n  \"Substract\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { summaryParams, summaryDates } from \"./dataStep_4\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Props {\r\n  reaction: any;\r\n}\r\n\r\nconst Step_5 = (props: Props) => {\r\n  const get = Object.values(props.reaction);\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"step4\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Parametry:</li>\r\n\r\n        {get.slice(0, 7).map((value: any, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryParams[idx]}:&nbsp;\r\n              </div>\r\n              <div className=\"step4__reactionValue\">\r\n                {Array.isArray(value) ? value.flat().join(\", \") : value}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {get.slice(7, 11).map((value: any, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryDates[idx]}:\r\n              </div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_5;\r\n","import { useState, useEffect, FormEvent } from \"react\";\r\nimport {\r\n  useReactionsQuery,\r\n  useAddReactionMutation,\r\n} from \"../../../services/apiSlice\";\r\nimport { INITIAL_DATA } from \"./dataFormReaction\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\nimport { useValidationForm } from \"../../../hooks/useValidationForm\";\r\nimport { ModelFormReaction } from \"./ModelFormReaction\";\r\n\r\nconst FormReaction = () => {\r\n  const { error, isLoading } = useReactionsQuery(undefined);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n  const [reaction, setReaction] = useState(INITIAL_DATA);\r\n\r\n  const handleChange = (fields: Partial<ModelFormReaction>) => {\r\n    setReaction(prev => {\r\n      return { ...prev, ...fields };\r\n    });\r\n  };\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_2 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_3 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_4 reaction={reaction} />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationForm } = useValidationForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationForm());\r\n    if (Object.keys(validationForm()).length) return;\r\n    isLastStep ? await addReaction(reaction) : next();\r\n  };\r\n\r\n  // if (isLoading) return <div>Loading..X.</div>;\r\n\r\n  // if (error) {\r\n  //   if (\"error\" in error) return <div>{error.error}</div>;\r\n  // }\r\n\r\n  useEffect(() => {\r\n    let timeoutID: any;\r\n\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        setReaction(INITIAL_DATA);\r\n        success.isSuccess = false as true;\r\n      }, 3000);\r\n    }\r\n\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, setReaction]);\r\n\r\n  const reactionFormHeaderData = [\r\n    \"Podstawowe reagenty\",\r\n    \"Techniki laboratoryjne\",\r\n    \"Przebieg reakcji\",\r\n    \"Podsumowanie\",\r\n  ];\r\n\r\n  return (\r\n    <main className=\"formReaction\">\r\n      <header className=\"wrapper wrapper--formReactionHeader \">\r\n        <p className=\"formReaction__stepIdx \">\r\n          Krok {currentStepIdx + 1}/{steps.length}\r\n        </p>\r\n        <h2 className=\"formReaction__topDescription\">\r\n          {reactionFormHeaderData[currentStepIdx]}\r\n        </h2>\r\n      </header>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={`wrapper formReaction__form ${\r\n          isLoading && \"formReaction__form--loading\"\r\n        }`}\r\n      >\r\n        <div className=\"formReaction__opacity\">\r\n          <div className=\"formReaction__wrapper\">\r\n            <>{isLoading && <h3>Loading</h3>}</>\r\n\r\n            {success.isSuccess ? (\r\n              <h3 className=\"formReaction__requestMessage\">\r\n                Dane wysłane i zapisane w liście reakcji\r\n              </h3>\r\n            ) : (\r\n              <>{step}</>\r\n            )}\r\n\r\n            {!success.isSuccess && (\r\n              <div className=\"formReaction__btns\">\r\n                {!isFirstStep && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={back}\r\n                    className=\"btn btn--formReaction\"\r\n                  >\r\n                    Wróć\r\n                  </button>\r\n                )}\r\n                <button type=\"submit\" className=\"btn btn--formReaction\">\r\n                  {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FormReaction;\r\n"],"names":["useValidationForm","editedReaction","idx","solventsValue","conditions","condition","name","trim","length","errorMessage","key","isNaN","selectMilimolles","alcaloids","toUpperCase","technics","solvents","Array","isArray","filter","value","includes","selectReactionCondition","substract","startDate","finishDate","Date","startTime","finishTime","validationForm","_errors","undefined","flat","forEach","_ref","INITIAL_DATA","isEdit","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","next","prev","back","props","_jsxs","className","classContainer","children","_jsx","type","checked","onChange","handleChange","onBlur","handleBlur","classInupt","id","htmlFor","classLabel","alcaloidsData","open","setOpen","handleOpen","state","label","classOptionsContainer","onClick","classInputTop","_Fragment","selectValues","map","classOption","handleChangeAlcaloids","e","target","motion","initial","opacity","y","animate","transition","delay","TextInput","reaction","text","placeholder","classInput","errors","SelectInput","inputName","alcaloid","RadioInput","transformedLabel","labelTransform","classStyle","solventsNameKeyData","isChecked","setIsChecked","useEffect","newIsChecked","_toConsumableArray","solvent","CheckboxInput","getNewSolvents","reduce","acc","push","handleCheckboxChange","split","char","Number","crypto","randomUUID","summaryParams","summaryDates","get","Object","values","slice","join","_useReactionsQuery","useReactionsQuery","isLoading","error","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","_useState3","_useState4","setReaction","fields","_objectSpread","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","clearTimeout","onSubmit","concat"],"sourceRoot":""}
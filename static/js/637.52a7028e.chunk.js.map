{"version":3,"file":"static/js/637.52a7028e.chunk.js","mappings":"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","sources":["hooks/useValidationForm.tsx","pages/reactionForm/formReaction/dataFormReaction.tsx","hooks/useMultistepForm.tsx","components/inputs/radioInput/RadioInput.tsx","components/inputs/selectInput/SelectInput.tsx","pages/reactionForm/step_1/dataStep_1.tsx","pages/reactionForm/step_1/Step_1.tsx","components/inputs/checkboxInput/CheckboxInput.tsx","pages/reactionForm/step_2/dataStep_2.tsx","pages/reactionForm/step_2/Step_2.tsx","pages/reactionForm/step_3/Step_3.tsx","pages/reactionForm/step_4/dataStep_4.tsx","pages/reactionForm/step_4/Step_4.tsx","pages/reactionForm/RequestMessage.tsx","pages/reactionForm/formReaction/FormReaction.tsx"],"sourcesContent":["import { ModelReaction } from \"./useReactions\";\r\n\r\nexport interface ModelValidationErrors {\r\n  [key: string]: any;\r\n  name?: string;\r\n  technics?: string;\r\n  alcaloids?: string;\r\n  selectMilimolles?: string;\r\n  substract?: string;\r\n  solvents?: string;\r\n  selectReactionCondition?: string;\r\n  startDate?: string;\r\n  finishDate?: string;\r\n  startTime?: string;\r\n  finishTime?: string;\r\n}\r\n\r\nconst toString = (solventsValue: string[] | string) => {\r\n  return Array.isArray(solventsValue)\r\n    ? solventsValue.join(\", \")\r\n    : solventsValue;\r\n};\r\n\r\nexport const useValidationForm = (\r\n  editedReaction: ModelReaction,\r\n  idx?: number\r\n) => {\r\n\r\n  const conditions = [\r\n    [\r\n      {\r\n        condition: editedReaction?.name.trim().length < 6,\r\n        errorMessage: \"Min. 6 znaków\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        condition: editedReaction?.name.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"name\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          isNaN(+editedReaction.selectMilimolles) ||\r\n          +editedReaction.selectMilimolles < 1 ||\r\n          +editedReaction.selectMilimolles > 6,\r\n        errorMessage: \"Podaj liczbę: 1-6\",\r\n        key: \"selectMilimolles\",\r\n      },\r\n      {\r\n        condition:\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"GRAMINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"KOFEINA\" &&\r\n          editedReaction.alcaloids.trim().toUpperCase() !== \"NIKOTYNA\",\r\n        errorMessage: \"Podaj alkaloid\",\r\n        key: \"alcaloids\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.technics.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"technics\",\r\n      },\r\n      {\r\n        condition: editedReaction.technics.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"technics\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition:\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"CH3OH\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"DMSO\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"DMF\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"CHCL3\") &&\r\n          !toString(editedReaction.solvents)\r\n            .trim()\r\n            .toLocaleUpperCase()\r\n            .includes(\"C2H5OH\"),\r\n        errorMessage: \"Rozp. z listy\",\r\n        key: \"solvents\",\r\n      },\r\n\r\n      {\r\n        condition:\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIESZANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"OGRZEWANIE\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"MIKROFALA\" &&\r\n          editedReaction.selectReactionCondition.trim().toUpperCase() !==\r\n            \"CHŁODZENIE\",\r\n        errorMessage: \"Podaj warunki\",\r\n        key: \"selectReactionCondition\",\r\n      },\r\n\r\n      {\r\n        condition: editedReaction.substract.trim().length < 3,\r\n        errorMessage: \"Min. 3 znaki\",\r\n        key: \"substract\",\r\n      },\r\n      {\r\n        condition: editedReaction.substract.trim().length > 10,\r\n        errorMessage: \"Max. 10 znaków\",\r\n        key: \"substract\",\r\n      },\r\n    ],\r\n\r\n    [\r\n      {\r\n        condition: !editedReaction.startDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishDate,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition:\r\n          new Date(editedReaction.startDate) >\r\n          new Date(editedReaction.finishDate),\r\n        errorMessage: \"Data po rozpoczęciu\",\r\n        key: \"finishDate\",\r\n      },\r\n      {\r\n        condition: !editedReaction.startTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"startTime\",\r\n      },\r\n      {\r\n        condition: !editedReaction.finishTime,\r\n        errorMessage: \"Wymagane\",\r\n        key: \"finishTime\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const validationForm = () => {\r\n    let _errors: ModelValidationErrors = {};\r\n\r\n    const conditionSet =\r\n      idx === undefined ? conditions.flat() : conditions[idx];\r\n\r\n    conditionSet.forEach(({ condition, errorMessage, key }) => {\r\n      if (condition) {\r\n        _errors[key] = errorMessage;\r\n      }\r\n    });\r\n\r\n    return _errors;\r\n  };\r\n\r\n  return { validationForm };\r\n};\r\n","import { ModelFormReaction } from \"./ModelFormReaction\";\r\nexport const INITIAL_DATA: ModelFormReaction = {\r\n  name: \"AH - \",\r\n  selectMilimolles: \"--Wybierz--\",\r\n  alcaloids: \"\",\r\n  technics: \"\",\r\n  solvents: [],\r\n  selectReactionCondition: \"--Wybierz--\",\r\n  substract: \"\",\r\n  startDate: \"\",\r\n  finishDate: \"\",\r\n  startTime: \"\",\r\n  finishTime: \"\",\r\n  isEdit: true,\r\n};\r\n\r\n\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return 1;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return 1;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","interface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n        {props.value}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { useState } from \"react\";\r\n\r\ninterface Props {\r\n  selectValues: string[];\r\n  label: string;\r\n  inputName: string;\r\n  value: string;\r\n  handleChange: (vaue: string) => void;\r\n  containerClass?: string;\r\n  labelClass?: string;\r\n  optionsContainerClass?: string;\r\n  inputTopClass?: string;\r\n  optionClass?: string;\r\n}\r\n\r\nconst SelectInput = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(state => !state);\r\n  };\r\n\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <label className={props.labelClass}>{props.label}</label>\r\n\r\n      <div className={props.optionsContainerClass}>\r\n        <div onClick={handleOpen} className={props.inputTopClass}>\r\n          {props.value}\r\n          <div className={open ? \"select__arrow--up\" : \"select__arrow\"}></div>\r\n        </div>\r\n\r\n        {open && (\r\n          <>\r\n            {props.selectValues.map(value => {\r\n              return (\r\n                <div\r\n                  key={value}\r\n                  className={props.optionClass}\r\n                  onClick={() => {\r\n                    props.handleChange(value);\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","export const alcaloidsData = [\"Gramina\", \"Kofeina\", \"Nikotyna\"];\r\n","import { motion } from \"framer-motion\";\r\nimport RadioInput from \"../../../components/inputs/radioInput/RadioInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\nimport { ModelFormReaction } from \"../formReaction/ModelFormReaction\";\r\nimport { alcaloidsData } from \"./dataStep_1\";\r\n\r\nexport interface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_1 = (props: Props): JSX.Element => {\r\n  const handleChangeName = (e: ChangeEvent) => {\r\n    return props.handleChange({ name: e.target.value });\r\n  };\r\n  const handleChangeAlcaloids = (e: ChangeEvent) => {\r\n    return props.handleChange({ alcaloids: e.target.value });\r\n  };\r\n\r\n  const handleChangeTechnics = (e: ChangeEvent) => {\r\n    return props.handleChange({ technics: e.target.value });\r\n  };\r\n\r\n  const handleChangeMilimolles = (value: string) => {\r\n    props.handleChange({ selectMilimolles: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        value={props.reaction.name}\r\n        handleChange={handleChangeName}\r\n        label={\"Nazwa reakcji\"}\r\n        placeholder={\"Nazwa\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.name}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Ilość moli substratu\"}\r\n        inputName={\"selectMilimolles\"}\r\n        selectValues={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]}\r\n        value={props.reaction.selectMilimolles}\r\n        handleChange={handleChangeMilimolles}\r\n        containerClass=\"reaction__selectContainer\"\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectMilimolles}</small>\r\n      </div>\r\n\r\n      <p className=\"reaction__radioInputHeader\">Alkaloid</p>\r\n      {alcaloidsData.map(alcaloid => {\r\n        return (\r\n          <RadioInput\r\n            key={alcaloid}\r\n            value={alcaloid}\r\n            name={\"alcaloids\"}\r\n            handleChange={handleChangeAlcaloids}\r\n            checked={props.reaction.alcaloids === alcaloid}\r\n            containerClass={\"reaction__radioContainer\"}\r\n            inuptClass={\"reaction__radioInput\"}\r\n            labelClass={\"reaction__radioLabel\"}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.alcaloids}</small>\r\n      </div>\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"technics\"}\r\n        value={props.reaction.technics}\r\n        handleChange={handleChangeTechnics}\r\n        label={\"Technika\"}\r\n        placeholder={\"Technika\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.technics}</small>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_1;\r\n","import { ReactElement } from \"react\";\r\n\r\nexport interface Props {\r\n  name: string;\r\n  checked: boolean;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  labelClass: string;\r\n  inputClass: string;\r\n  styleClass: string;\r\n  labelTransform: (label: string) => any;\r\n}\r\n\r\nconst CheckboxInput = (props: Props) => {\r\n  const transformedLabel = props.labelTransform\r\n    ? props.labelTransform(props.name)\r\n    : props.name;\r\n\r\n  return (\r\n    <>\r\n      <label className={props.labelClass}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={props.name}\r\n          checked={props.checked}\r\n          onChange={props.handleChange}\r\n          className={props.inputClass}\r\n        />\r\n        <div className={props.styleClass}>{transformedLabel}</div>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","export const solventsNameKeyData = [\r\n  { name: \"CHCL3\", key: 0 },\r\n  { name: \"CH3OH\", key: 1 },\r\n  { name: \"DMF\", key: 2 },\r\n  { name: \"DMSO\", key: 3 },\r\n  { name: \"C2H5OH\", key: 4 },\r\n];\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport CheckboxInput from \"../../../components/inputs/checkboxInput/CheckboxInput\";\r\nimport SelectInput from \"../../../components/inputs/selectInput/SelectInput\";\r\nimport { solventsNameKeyData } from \"./dataStep_2\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModelFormReaction } from \"../formReaction/ModelFormReaction\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\n\r\nexport interface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_3 = (props: Props) => {\r\n  const [isChecked, setIsChecked] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const newIsChecked = [...isChecked];\r\n    solventsNameKeyData.forEach((solvent, idx) => {\r\n      newIsChecked[idx] = props.reaction.solvents.includes(solvent.name);\r\n    });\r\n    setIsChecked(newIsChecked);\r\n  }, [props.reaction.solvents]);\r\n\r\n  const handleCheckboxChange = (idx: number, name: string) => {\r\n    const newIsChecked = [...isChecked];\r\n    newIsChecked[idx] = !newIsChecked[idx];\r\n    setIsChecked(newIsChecked);\r\n\r\n    const getNewSolvents = newIsChecked.reduce(\r\n      (acc: string[], checked, idx) => {\r\n        if (checked) {\r\n          acc.push(solventsNameKeyData[idx].name);\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    props.handleChange({ solvents: getNewSolvents });\r\n  };\r\n\r\n  const handleSelectChange = (value: string) => {\r\n    props.handleChange({ selectReactionCondition: value });\r\n  };\r\n\r\n  const handleTextInputChange = (e: ChangeEvent) => {\r\n    props.handleChange({ substract: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <p className=\"reaction__checkboxesHeader\">Rozpuszczalnik</p>\r\n      <div className=\"reaction__checkboxecContainer\">\r\n        {solventsNameKeyData.map(({ name, key }) => (\r\n          <CheckboxInput\r\n            key={key}\r\n            name={name}\r\n            checked={isChecked[key]}\r\n            handleChange={() => handleCheckboxChange(key, name)}\r\n            labelClass={\"reaction__checkboxLabel\"}\r\n            inputClass={\"reaction__checkboxInput\"}\r\n            styleClass={\"reaction__checkboxStyle\"}\r\n            labelTransform={(label: string) =>\r\n              label.split(\"\").map(char =>\r\n                isNaN(Number(char)) ? (\r\n                  char\r\n                ) : (\r\n                  <small className=\"numberInCheckbox\" key={crypto.randomUUID()}>\r\n                    {char}\r\n                  </small>\r\n                )\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n        <div className=\"reaction__checkboxLabel\"></div>\r\n      </div>\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.solvents}</small>\r\n      </div>\r\n\r\n      <SelectInput\r\n        label={\"Warunki reakcji\"}\r\n        inputName={\"selectReactionCondition\"}\r\n        selectValues={[\"mieszanie\", \"ogrzewanie\", \"mikrofala\", \"chłodzenie\"]}\r\n        value={props.reaction.selectReactionCondition}\r\n        handleChange={handleSelectChange}\r\n        containerClass={\"reaction__selectContainer\"}\r\n        labelClass=\"reaction__selectLabel\"\r\n        inputTopClass=\"reaction__selectTop\"\r\n        optionsContainerClass=\"reaction__selectOptionsContainer\"\r\n        optionClass=\"reaction__selectOption\"\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.selectReactionCondition}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"text\"}\r\n        name={\"substract\"}\r\n        value={props.reaction.substract}\r\n        handleChange={handleTextInputChange}\r\n        label={\"Substrat\"}\r\n        placeholder={\"Substrat\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.substract}</small>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Step_3;\r\n","import TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport { ChangeEvent } from \"../../../data/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModelFormReaction } from \"../formReaction/ModelFormReaction\";\r\nimport { ModelValidationErrors } from \"../../../hooks/useValidationForm\";\r\n\r\ninterface Props {\r\n  reaction: ModelFormReaction;\r\n  handleChange: (fields: Partial<ModelFormReaction>) => void;\r\n  errors: ModelValidationErrors;\r\n}\r\n\r\nconst Step_4 = (props: Props) => {\r\n  const handleStarthDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ startDate: e.target.value });\r\n  };\r\n\r\n  const handleFinishDate = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishDate: e.target.value });\r\n  };\r\n\r\n  const handleStartTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ startTime: e.target.value });\r\n  };\r\n\r\n  const handleFinishTime = (e: ChangeEvent) => {\r\n    return props.handleChange({ finishTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"startDate\"}\r\n        value={props.reaction.startDate}\r\n        handleChange={handleStarthDate}\r\n        label={\"Data rozpoczęcia\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"date\"}\r\n        name={\"finishDate\"}\r\n        value={props.reaction.finishDate}\r\n        handleChange={handleFinishDate}\r\n        label={\"Data ukończenia\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishDate}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"startTime\"}\r\n        value={props.reaction.startTime}\r\n        handleChange={handleStartTime}\r\n        label={\"Godzina rozpoczęcia\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.startTime}</small>\r\n      </div>\r\n\r\n      <TextInput\r\n        type={\"time\"}\r\n        name={\"finishTime\"}\r\n        value={props.reaction.finishTime}\r\n        handleChange={handleFinishTime}\r\n        label={\"Godzina zakończenia\"}\r\n        containerClass={\"reaction__textInputContainer\"}\r\n        labelClass={\"reaction__textInputLabel\"}\r\n        inputClass={\"reaction__textInput\"}\r\n      />\r\n      <div className=\"reaction__error\">\r\n        <small>{props.errors.finishTime}</small>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_4;\r\n","export const summaryParams = [\r\n  \"Nazwa\",\r\n  \"Ilość milimoli\",\r\n  \"Alkaloidy\",\r\n  \"Technika\",\r\n  \"Rozpuszczalniki\",\r\n  \"Warunki reakcji\",\r\n  \"Substract\",\r\n];\r\n\r\nexport const summaryDates = [\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n  \"Rozpoczęcie\",\r\n  \"Zakończenie\",\r\n];\r\n","import { summaryParams, summaryDates } from \"./dataStep_4\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModelFormReaction } from \"../formReaction/ModelFormReaction\";\r\n\r\n\r\ninterface Props {\r\n   reaction: ModelFormReaction;\r\n}\r\n\r\nconst Step_5 = (props: Props) => {\r\n  const getReactionValues = Object.values(props.reaction);\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"step4\"\r\n      initial={{ opacity: 0, y: -40 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 }}\r\n    >\r\n      <ul>\r\n        <li className=\"step4__subHeader\">Parametry:</li>\r\n\r\n        {getReactionValues\r\n          .slice(0, 7)\r\n          .map((value: string | string[], idx: number) => {\r\n            return (\r\n              <li key={idx} className=\"step4__reactionItem\">\r\n                <div className=\"step4__reactionProperty\">\r\n                  {summaryParams[idx]}:&nbsp;\r\n                </div>\r\n                <div className=\"step4__reactionValue\">\r\n                  {Array.isArray(value) ? value.flat().join(\", \") : value}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        <li className=\"step4__subHeader\">Czasy:</li>\r\n        {getReactionValues.slice(7, 11).map((value: string, idx: number) => {\r\n          return (\r\n            <li key={idx} className=\"step4__reactionItem\">\r\n              <div className=\"step4__reactionProperty\">\r\n                {summaryDates[idx]}:data\r\n              </div>\r\n              <div className=\"step4__reactionValue\">{value}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Step_5;\r\n","interface Props {\r\n  message: JSX.Element | string;\r\n  className: string;\r\n}\r\n\r\nconst RequestMessage = (props: Props) => {\r\n  return <div className={props.className}>{props.message}</div>;\r\n};\r\n\r\nexport default RequestMessage;\r\n","import { useState, useEffect, FormEvent } from \"react\";\r\nimport {\r\n  useAddReactionMutation,\r\n} from \"../../../services/apiSlice\";\r\nimport { INITIAL_DATA } from \"./dataFormReaction\";\r\nimport useMultistepForm from \"../../../hooks/useMultistepForm\";\r\nimport Step_1 from \"../step_1/Step_1\";\r\nimport Step_2 from \"../step_2/Step_2\";\r\nimport Step_3 from \"../step_3/Step_3\";\r\nimport Step_4 from \"../step_4/Step_4\";\r\nimport { useValidationForm } from \"../../../hooks/useValidationForm\";\r\nimport { ModelFormReaction } from \"./ModelFormReaction\";\r\nimport RequestMessage from \"../RequestMessage\";\r\n\r\nconst FormReaction = () => {\r\n  const [reaction, setReaction] = useState(INITIAL_DATA);\r\n  const [errors, setErrors] = useState({});\r\n  const [addReaction, success] = useAddReactionMutation();\r\n\r\n  const handleChange = (fields: Partial<ModelFormReaction>) => {\r\n    setReaction(prev => {\r\n      return { ...prev, ...fields };\r\n    });\r\n  };\r\n\r\n  const {\r\n    steps,\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step,\r\n    isFirstStep,\r\n    isLastStep,\r\n    back,\r\n    next,\r\n  } = useMultistepForm([\r\n    <Step_1 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_2 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_3 reaction={reaction} handleChange={handleChange} errors={errors} />,\r\n    <Step_4 reaction={reaction} />,\r\n  ]);\r\n\r\n  const idx = currentStepIdx === 3 ? undefined : currentStepIdx;\r\n  const { validationForm } = useValidationForm(reaction, idx);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors(validationForm());\r\n    if (Object.keys(validationForm()).length) return;\r\n    isLastStep ? await addReaction(reaction) : next();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeoutID: NodeJS.Timeout;\r\n    if (success.isSuccess) {\r\n      timeoutID = setTimeout(() => {\r\n        setCurrentStepIdx(0);\r\n        setReaction(INITIAL_DATA);\r\n        success.isSuccess = false as true;\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timeoutID);\r\n  }, [success.isSuccess, setCurrentStepIdx, setReaction]);\r\n\r\n  const reactionFormHeaderData = [\r\n    \"Podstawowe reagenty\",\r\n    \"Techniki laboratoryjne\",\r\n    \"Przebieg reakcji\",\r\n    \"Podsumowanie\",\r\n  ];\r\n\r\n  let formContent = (\r\n    <>\r\n      {step}\r\n      <div className=\"formReaction__btns\">\r\n        {!isFirstStep && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={back}\r\n            className=\"btn btn--formReaction\"\r\n          >\r\n            Wróć\r\n          </button>\r\n        )}\r\n        <button type=\"submit\" className=\"btn btn--formReaction\">\r\n          {isLastStep ? \"Wyślij\" : \"Dalej\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  if (success.error) {\r\n    if (\"error\" in success.error)\r\n      formContent = (\r\n        <RequestMessage\r\n          message={success.error.error}\r\n          className=\"formReaction__requestMessage\"\r\n        />\r\n      );\r\n  }\r\n  if (success.isLoading) {\r\n    formContent = (\r\n      <RequestMessage\r\n        message={<> Wysyła... </>}\r\n        className=\"formReaction__requestMessage\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (success.isSuccess) {\r\n    formContent = (\r\n      <RequestMessage\r\n        message={\r\n          <>\r\n            Dane wysłane i zapisane <br /> w liście reakcji\r\n          </>\r\n        }\r\n        className=\"formReaction__requestMessage\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"formReaction\">\r\n      <header className=\"wrapper wrapper--formReactionHeader \">\r\n        <p className=\"formReaction__stepIdx \">\r\n          Krok {currentStepIdx + 1}/{steps.length}\r\n        </p>\r\n        <h2 className=\"formReaction__topDescription\">\r\n          {reactionFormHeaderData[currentStepIdx]}\r\n        </h2>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit} className={`wrapper formReaction__form`}>\r\n        <div className=\"formReaction__opacity\">\r\n          <div className=\"formReaction__wrapper\">{formContent}</div>\r\n        </div>\r\n      </form>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FormReaction;\r\n"],"names":["toString","solventsValue","Array","isArray","join","useValidationForm","editedReaction","idx","conditions","condition","name","trim","length","errorMessage","key","isNaN","selectMilimolles","alcaloids","toUpperCase","technics","solvents","toLocaleUpperCase","includes","selectReactionCondition","substract","startDate","finishDate","Date","startTime","finishTime","validationForm","_errors","undefined","flat","forEach","_ref","INITIAL_DATA","isEdit","steps","_useState","useState","_useState2","_slicedToArray","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","next","prev","back","props","_jsxs","className","containerClass","children","_jsx","type","value","checked","onChange","handleChange","inuptClass","id","htmlFor","labelClass","open","setOpen","handleOpen","state","label","optionsContainerClass","onClick","inputTopClass","_Fragment","selectValues","map","optionClass","alcaloidsData","handleChangeAlcaloids","e","target","motion","initial","opacity","y","animate","transition","delay","TextInput","reaction","placeholder","inputClass","errors","SelectInput","inputName","alcaloid","RadioInput","transformedLabel","labelTransform","styleClass","solventsNameKeyData","isChecked","setIsChecked","useEffect","newIsChecked","_toConsumableArray","solvent","CheckboxInput","getNewSolvents","reduce","acc","push","handleCheckboxChange","split","char","Number","crypto","randomUUID","summaryParams","summaryDates","getReactionValues","Object","values","slice","message","setReaction","_useState3","_useState4","setErrors","_useAddReactionMutati","useAddReactionMutation","_useAddReactionMutati2","addReaction","success","fields","_objectSpread","_useMultistepForm","useMultistepForm","Step_1","Step_2","Step_3","Step_4","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","preventDefault","keys","abrupt","stop","_x","apply","arguments","timeoutID","isSuccess","setTimeout","clearTimeout","formContent","error","RequestMessage","isLoading","onSubmit"],"sourceRoot":""}
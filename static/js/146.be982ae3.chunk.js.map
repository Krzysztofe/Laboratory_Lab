{"version":3,"file":"static/js/146.be982ae3.chunk.js","mappings":"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","sources":["pages/login/useFormikInLoginComponent.tsx","pages/login/btnsLogin/BtnsLogin.tsx","pages/login/_indexLogin/IndexLogin.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport Swal from \"sweetalert2\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst useFormikInLoginComponent = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const formikLogin = useFormik({\r\n    initialValues: {\r\n      email: \"qq@wp.pl\",\r\n      password: \"qqqqqq\",\r\n      passwordRepeated: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Podaj email\").required(\"Email wymagany\"),\r\n      password: Yup.string().required(\"Hasło wymagane\"),\r\n      passwordRepeated: Yup.string()\r\n        .required(\"Pwtórz hasło\")\r\n        .test(\"match\", \"Hasło niezgodne\", function (value) {\r\n          return this.parent.password === value;\r\n        }),\r\n    }),\r\n\r\n    onSubmit: values => {\r\n      const { email, password } = values;\r\n\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => navigate(\"/reaction-form\"))\r\n        .catch(error =>\r\n          Swal.fire({\r\n            title: \"Błąd\",\r\n            text: error.message,\r\n            confirmButtonColor: \"rgb(31, 180, 255)\",\r\n          })\r\n        );\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    {\r\n      formikLogin.setFieldValue(\r\n        \"passwordRepeated\",\r\n        formikLogin.values.password\r\n      );\r\n    }\r\n  }, [formikLogin.values.password]);\r\n\r\n  const formikRegister = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordRepeated: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Podaj email\").required(\"Email wymagany\"),\r\n      password: Yup.string()\r\n        .required(\"Podaj hasło\")\r\n        .min(6, \"Hasło min.6 znaków\"),\r\n      passwordRepeated: Yup.string()\r\n        .required(\"Pwtórz hasło\")\r\n        .test(\"match\", \"Hasło niezgodne\", function (value) {\r\n          return this.parent.password === value;\r\n        }),\r\n    }),\r\n    onSubmit: values => {\r\n      const { email, password } = values;\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then(() => navigate(\"/reaction-form\"))\r\n        .catch(error =>\r\n          Swal.fire({\r\n            title: \"Błąd\",\r\n            text: error.message,\r\n            confirmButtonColor: \"rgb(31, 180, 255)\",\r\n          })\r\n        );\r\n    },\r\n  });\r\n\r\n  return { formikLogin, formikRegister };\r\n};\r\n\r\nexport default useFormikInLoginComponent;","interface Props {\r\n  btnLeft: string;\r\n  btnRight: string;\r\n  handleRegister: () => void;\r\n}\r\n\r\nconst BtnsLogin = (props: Props) => {\r\n  return (\r\n    <div className=\"btnsLogin\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={props.handleRegister}\r\n        className=\"btn btn--login\"\r\n      >\r\n       {props.btnLeft}\r\n      </button>\r\n      <button type=\"submit\" className=\"btn btn--login\">\r\n      {props.btnRight}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BtnsLogin;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TextInput from \"../../../components/inputs/textInput/TextInput\";\r\nimport NavHomeSpacer from \"../../../components/navHomeSpacer/NavHomeSpacer\";\r\nimport { auth } from \"../../../data/firebaseConfig\";\r\nimport useFormikInLoginComponent from \"../useFormikInLoginComponent\";\r\nimport BtnsLogin from \"../btnsLogin/BtnsLogin\";\r\n\r\nconst IndexLogin = () => {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      user && navigate(\"/reaction-form\");\r\n    });\r\n  }, []);\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const handleRegister = () => {\r\n    setIsLogin(prev => !prev);\r\n  };\r\n\r\n  const { formikLogin, formikRegister } = useFormikInLoginComponent();\r\n\r\n  const formik = isLogin ? formikLogin : formikRegister;\r\n\r\n  return (\r\n    <>\r\n      <NavHomeSpacer />\r\n      <main className=\"wrapper login\">\r\n        <div className=\"login__opacity\">\r\n          <form onSubmit={formik.handleSubmit} className=\"loginForm\">\r\n            <h2 className=\"loginForm__title\">\r\n              {isLogin ? \"Logowanie\" : \"Rejestracja\"}\r\n            </h2>\r\n\r\n            <TextInput\r\n              type={\"text\"}\r\n              name={\"email\"}\r\n              value={formik.values.email}\r\n              handleChange={formik.handleChange}\r\n              handleBlur={formik.handleBlur}\r\n              label={\"Email\"}\r\n              placeholder={\"Email\"}\r\n              containerClass={\"loginForm__inputContainer\"}\r\n              labelClass={\"loginForm__label\"}\r\n              inputClass={\"loginForm__input\"}\r\n            />\r\n            <div className=\"loginForm__error\">\r\n              {formik.touched.email && formik.errors.email && (\r\n                <small>{formik.errors.email}</small>\r\n              )}\r\n            </div>\r\n\r\n            <TextInput\r\n              type={\"password\"}\r\n              name={\"password\"}\r\n              value={formik.values.password}\r\n              handleChange={formik.handleChange}\r\n              handleBlur={formik.handleBlur}\r\n              label={\"Hasło\"}\r\n              placeholder={\"Hasło\"}\r\n              containerClass={\"loginForm__inputContainer\"}\r\n              labelClass={\"loginForm__label\"}\r\n              inputClass={\"loginForm__input\"}\r\n            />\r\n            <div className=\"loginForm__error\">\r\n              {formik.touched.password && formik.errors.password && (\r\n                <small>{formik.errors.password}</small>\r\n              )}\r\n            </div>\r\n\r\n            {isLogin && (\r\n              <>\r\n                <div className=\"loginForm__inputContainer\"></div>\r\n                <div className=\"loginForm__error\"></div>\r\n              </>\r\n            )}\r\n\r\n            {!isLogin && (\r\n              <>\r\n                <TextInput\r\n                  type={\"password\"}\r\n                  name={\"passwordRepeated\"}\r\n                  value={formik.values.passwordRepeated}\r\n                  handleChange={formik.handleChange}\r\n                  handleBlur={formik.handleBlur}\r\n                  label={\"Powtórz hasło\"}\r\n                  placeholder={\"Hasło\"}\r\n                  containerClass={\"loginForm__inputContainer\"}\r\n                  labelClass={\"loginForm__label\"}\r\n                  inputClass={\"loginForm__input\"}\r\n                />\r\n\r\n                <div className=\"loginForm__error\">\r\n                  {formik.touched.passwordRepeated &&\r\n                    formik.errors.passwordRepeated && (\r\n                      <small>{formik.errors.passwordRepeated}</small>\r\n                    )}\r\n                </div>\r\n              </>\r\n            )}\r\n            {isLogin ? (\r\n              <BtnsLogin\r\n                handleRegister={handleRegister}\r\n                btnLeft={\"Rejestracja\"}\r\n                btnRight={\"Logowanie\"}\r\n              />\r\n            ) : (\r\n              <BtnsLogin\r\n                handleRegister={handleRegister}\r\n                btnLeft={\"Logowanie\"}\r\n                btnRight={\"Rejestracja\"}\r\n              />\r\n            )}\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexLogin;\r\n"],"names":["navigate","useNavigate","formikLogin","useFormik","initialValues","email","password","passwordRepeated","validationSchema","Yup","required","test","value","this","parent","onSubmit","values","signInWithEmailAndPassword","auth","then","catch","error","Swal","title","text","message","confirmButtonColor","useEffect","setFieldValue","formikRegister","min","createUserWithEmailAndPassword","props","_jsxs","className","children","_jsx","type","onClick","handleRegister","btnLeft","btnRight","user","_useState","useState","_useState2","_slicedToArray","isLogin","setIsLogin","prev","_useFormikInLoginComp","useFormikInLoginComponent","formik","_Fragment","NavHomeSpacer","handleSubmit","TextInput","name","handleChange","handleBlur","label","placeholder","containerClass","labelClass","inputClass","touched","errors","BtnsLogin"],"sourceRoot":""}